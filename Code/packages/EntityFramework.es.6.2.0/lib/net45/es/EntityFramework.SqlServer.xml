<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>EntityFramework.SqlServer</name>
  </assembly>
  <members>
    <member name="T:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy">
      <summary>
        <see cref="T:System.Data.Entity.Infrastructure.IDbExecutionStrategy" /> que recupera acciones que inician excepciones provocadas por errores transitorios de SQL Azure. </summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy.#ctor">
      <summary>Crea una nueva instancia de <see cref="T:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy" />.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy.#ctor(System.Int32,System.TimeSpan)">
      <summary>Crea una nueva instancia de <see cref="T:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy" /> con los límites especificados para el número de reintentos y el retraso entre reintentos.</summary>
      <param name="maxRetryCount">Número máximo de reintentos.</param>
      <param name="maxDelay">Retraso máximo en milisegundos entre los reintentos.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy.ShouldRetryOn(System.Exception)">
      <summary>Determina si la excepción especificada debe o no reintentarse.</summary>
      <returns>Es true si la excepción especificada se reintenta; de lo contrario, false.</returns>
      <param name="exception">Excepción que va a reintentarse.</param>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlFunctions">
      <summary>Contiene códigos auxiliares de funciones que exponen métodos de SQL Server en consultas Linq to Entities.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Acos(System.Nullable{System.Decimal})">
      <summary>Función matemática que devuelve el ángulo, en radianes, cuyo coseno es el valor numérico especificado.Este ángulo se llama arco coseno.</summary>
      <returns>Ángulo, medido en radianes.</returns>
      <param name="arg1">Coseno de un ángulo.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Acos(System.Nullable{System.Double})">
      <summary>Función matemática que devuelve el ángulo, en radianes, cuyo coseno es el valor numérico especificado.Este ángulo se llama arco coseno.</summary>
      <returns>Ángulo, en radianes, definido por el valor de coseno de entrada.</returns>
      <param name="arg1">Coseno de un ángulo.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Ascii(System.String)">
      <summary>Devuelve el valor de código ASCII del carácter situado más a la izquierda de una expresión de caracteres.</summary>
      <returns>Código ASCII del primer carácter de la cadena de entrada.</returns>
      <param name="arg">Cadena válida.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Asin(System.Nullable{System.Decimal})">
      <summary>Función matemática que devuelve el ángulo, en radianes, cuyo seno es el valor numérico especificado.Este ángulo se llama arco seno.</summary>
      <returns>Ángulo, medido en radianes.</returns>
      <param name="arg">Seno de un ángulo.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Asin(System.Nullable{System.Double})">
      <summary>Función matemática que devuelve el ángulo, en radianes, cuyo seno es el valor numérico especificado.Este ángulo se llama arco seno.</summary>
      <returns>Ángulo, medido en radianes.</returns>
      <param name="arg">Seno de un ángulo.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan(System.Nullable{System.Decimal})">
      <summary>Función matemática que devuelve el ángulo, en radianes, cuya tangente es el valor numérico especificado.Este ángulo se llama arco tangente.</summary>
      <returns>Ángulo, medido en radianes.</returns>
      <param name="arg">Tangente de un ángulo.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan(System.Nullable{System.Double})">
      <summary>Función matemática que devuelve el ángulo, en radianes, cuya tangente es el valor numérico especificado.Este ángulo se llama arco tangente.</summary>
      <returns>Ángulo, medido en radianes.</returns>
      <param name="arg">Tangente de un ángulo.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan2(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>Devuelve el ángulo positivo, en radianes, entre el eje x positivo y el radio, desde el origen hasta el punto (x, y), donde x e y son los dos valores numéricos especificados.El primer parámetro que se pasa a la función es el valor y el segundo parámetro es el valor x.</summary>
      <returns>Ángulo, medido en radianes.</returns>
      <param name="arg1">Coordenada y de un punto.</param>
      <param name="arg2">Coordenada x de un punto.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan2(System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Devuelve el ángulo positivo, en radianes, entre el eje x positivo y el radio, desde el origen hasta el punto (x, y), donde x e y son los dos valores numéricos especificados.El primer parámetro que se pasa a la función es el valor y el segundo parámetro es el valor x.</summary>
      <returns>Ángulo, medido en radianes.</returns>
      <param name="arg1">Coordenada y de un punto.</param>
      <param name="arg2">Coordenada x de un punto.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Char(System.Nullable{System.Int32})">
      <summary>Devuelve el carácter que corresponde al valor ASCII entero especificado.</summary>
      <returns>Carácter que corresponde al valor ASCII entero especificado.</returns>
      <param name="arg">Código ASCII.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.Byte[],System.Byte[])">
      <summary>Devuelve la posición inicial de una expresión encontrada dentro de otra expresión.</summary>
      <returns>Posición inicial de destino si este se encuentra en toSearch.</returns>
      <param name="toSearch">Expresión de cadena que se va a buscar.</param>
      <param name="target">Expresión de cadena que se va a buscar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int32})">
      <summary>Devuelve la posición inicial de una expresión encontrada dentro de otra expresión.</summary>
      <returns>Posición inicial de destino si este se encuentra en toSearch.</returns>
      <param name="toSearch">Expresión de cadena que se va a buscar.</param>
      <param name="target">Expresión de cadena que se va a buscar.</param>
      <param name="startLocation">Posición del carácter en toSearch donde comienza la búsqueda.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int64})">
      <summary>Devuelve la posición inicial de una expresión encontrada dentro de otra expresión.</summary>
      <returns>Posición inicial de destino si este se encuentra en toSearch.</returns>
      <param name="toSearch">Expresión de cadena que se va a buscar.</param>
      <param name="target">Expresión de cadena que se va a buscar.</param>
      <param name="startLocation">Posición del carácter en toSearch donde comienza la búsqueda.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.String,System.String)">
      <summary>Devuelve la posición inicial de una expresión encontrada dentro de otra expresión.</summary>
      <returns>Posición inicial de destino si este se encuentra en toSearch.</returns>
      <param name="toSearch">Expresión de cadena que se va a buscar.</param>
      <param name="target">Expresión de cadena que se va a buscar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int32})">
      <summary>Devuelve la posición inicial de una expresión encontrada dentro de otra expresión.</summary>
      <returns>Posición inicial de destino si este se encuentra en toSearch.</returns>
      <param name="toSearch">Expresión de cadena que se va a buscar.</param>
      <param name="target">Expresión de cadena que se va a buscar.</param>
      <param name="startLocation">Posición del carácter en toSearch donde comienza la búsqueda.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int64})">
      <summary>Devuelve la posición inicial de una expresión encontrada dentro de otra expresión.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> del valor <see cref="T:System.Int64" /> que es la posición inicial de destino si este se encuentra en toSearch.</returns>
      <param name="toSearch">Expresión de cadena que se va a buscar.</param>
      <param name="target">Expresión de cadena que se va a buscar.</param>
      <param name="startLocation">Posición del carácter en toSearch donde comienza la búsqueda.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Byte[])">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre el argumento de entrada.</summary>
      <returns>Suma de comprobación calculada sobre el valor de entrada.</returns>
      <param name="arg1">Matriz de caracteres para la que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Byte[],System.Byte[])">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre los argumentos de entrada.</summary>
      <returns>Suma de comprobación calculada sobre los valores de entrada.</returns>
      <param name="arg1">Matriz de caracteres para la que se calcula la suma de comprobación.</param>
      <param name="arg2">Matriz de caracteres para la que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Byte[],System.Byte[],System.Byte[])">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre los argumentos de entrada.</summary>
      <returns>Suma de comprobación calculada sobre los valores de entrada.</returns>
      <param name="arg1">Matriz de caracteres para la que se calcula la suma de comprobación.</param>
      <param name="arg2">Matriz de caracteres para la que se calcula la suma de comprobación.</param>
      <param name="arg3">Matriz de caracteres para la que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Boolean})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre el argumento de entrada.</summary>
      <returns>Suma de comprobación calculada sobre el valor de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre los argumentos de entrada.</summary>
      <returns>Suma de comprobación calculada sobre los valores de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg2">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre los argumentos de entrada.</summary>
      <returns>Suma de comprobación calculada sobre los valores de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg2">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg3">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTime})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre el argumento de entrada.</summary>
      <returns>Suma de comprobación calculada sobre los valores de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre los argumentos de entrada.</summary>
      <returns>Suma de comprobación calculada sobre los valores de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg2">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre los argumentos de entrada.</summary>
      <returns>Suma de comprobación calculada sobre los valores de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg2">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg3">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre el argumento de entrada.</summary>
      <returns>Suma de comprobación calculada sobre el valor de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre los argumentos de entrada.</summary>
      <returns>Suma de comprobación calculada sobre los valores de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg2">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre los argumentos de entrada.</summary>
      <returns>Suma de comprobación calculada sobre los valores de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg2">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg3">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Decimal})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre el argumento de entrada.</summary>
      <returns>Suma de comprobación calculada sobre el valor de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre los argumentos de entrada.</summary>
      <returns>Suma de comprobación calculada sobre los valores de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg2">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre los argumentos de entrada.</summary>
      <returns>Suma de comprobación calculada sobre los valores de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg2">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg3">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Double})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre el argumento de entrada.</summary>
      <returns>Suma de comprobación calculada sobre el valor de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre los argumentos de entrada.</summary>
      <returns>Suma de comprobación calculada sobre los valores de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg2">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre los argumentos de entrada.</summary>
      <returns>Suma de comprobación calculada sobre los valores de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg2">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg3">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Guid})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre el argumento de entrada.</summary>
      <returns>Suma de comprobación calculada sobre el valor de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre los argumentos de entrada.</summary>
      <returns>Suma de comprobación calculada sobre los valores de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg2">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre los argumentos de entrada.</summary>
      <returns>Suma de comprobación calculada sobre los valores de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg2">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg3">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.TimeSpan})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre el argumento de entrada.</summary>
      <returns>Suma de comprobación calculada sobre el valor de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre los argumentos de entrada.</summary>
      <returns>Suma de comprobación calculada sobre los valores de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg2">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre los argumentos de entrada.</summary>
      <returns>Suma de comprobación calculada sobre los valores de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg2">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg3">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.String)">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre el argumento de entrada.</summary>
      <returns>Suma de comprobación calculada sobre el valor de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.String,System.String)">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre los argumentos de entrada.</summary>
      <returns>Suma de comprobación calculada sobre los valores de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg2">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.String,System.String,System.String)">
      <summary>Devuelve el valor de la suma de comprobación calculada sobre los argumentos de entrada.</summary>
      <returns>Suma de comprobación calculada sobre los valores de entrada.</returns>
      <param name="arg1">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg2">Valor para el que se calcula la suma de comprobación.</param>
      <param name="arg3">Valor para el que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>Devuelve la suma de comprobación de los valores de una colección.Los valores NULL se pasan por alto.</summary>
      <returns>Suma de comprobación calculada de la colección de entrada.</returns>
      <param name="arg">Colección de valores sobre los que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>Devuelve la suma de comprobación de los valores de una colección.Los valores NULL se pasan por alto.</summary>
      <returns>Suma de comprobación calculada de la colección de entrada.</returns>
      <param name="arg">Colección de valores sobre los que se calcula la suma de comprobación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cos(System.Nullable{System.Decimal})">
      <summary>Devuelve el coseno trigonométrico del ángulo especificado, en radianes, en la expresión especificada.</summary>
      <returns>Coseno trigonométrico del ángulo especificado.</returns>
      <param name="arg">Ángulo, medido en radianes.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cos(System.Nullable{System.Double})">
      <summary>Devuelve el coseno trigonométrico del ángulo especificado, en radianes, en la expresión especificada.</summary>
      <returns>Coseno trigonométrico del ángulo especificado.</returns>
      <param name="arg">Ángulo, medido en radianes.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cot(System.Nullable{System.Decimal})">
      <summary>Función matemática que devuelve la cotangente trigonométrica del ángulo especificado, en radianes.</summary>
      <returns>Cotangente trigonométrica del ángulo especificado.</returns>
      <param name="arg">Ángulo, medido en radianes.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cot(System.Nullable{System.Double})">
      <summary>Función matemática que devuelve la cotangente trigonométrica del ángulo especificado, en radianes.</summary>
      <returns>Cotangente trigonométrica del ángulo especificado.</returns>
      <param name="arg">Ángulo, medido en radianes.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CurrentTimestamp">
      <summary>Devuelve la fecha y la hora actuales.</summary>
      <returns>Fecha y hora actuales.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CurrentUser">
      <summary>Devuelve el nombre del usuario actual.</summary>
      <returns>Nombre del usuario actual.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Byte[])">
      <summary>Devuelve el número de bytes utilizados para representar cualquier expresión.</summary>
      <returns>Número de bytes del valor de entrada.</returns>
      <param name="arg">Valor cuya longitud se va a examinar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Boolean})">
      <summary>Devuelve el número de bytes utilizados para representar cualquier expresión.</summary>
      <returns>Número de bytes del valor de entrada.</returns>
      <param name="arg">Valor que se va a examinar para la longitud de datos.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.DateTime})">
      <summary>Devuelve el número de bytes utilizados para representar cualquier expresión.</summary>
      <returns>Número de bytes del valor de entrada.</returns>
      <param name="arg">Valor que se va a examinar para la longitud de datos.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.DateTimeOffset})">
      <summary>Devuelve el número de bytes utilizados para representar cualquier expresión.</summary>
      <returns>Número de bytes del valor de entrada.</returns>
      <param name="arg">Valor que se va a examinar para la longitud de datos.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Decimal})">
      <summary>Devuelve el número de bytes utilizados para representar cualquier expresión.</summary>
      <returns>Número de bytes del valor de entrada.</returns>
      <param name="arg">Valor que se va a examinar para la longitud de datos.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Double})">
      <summary>Devuelve el número de bytes utilizados para representar cualquier expresión.</summary>
      <returns>Número de bytes del valor de entrada.</returns>
      <param name="arg">Valor que se va a examinar para la longitud de datos.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Guid})">
      <summary>Devuelve el número de bytes utilizados para representar cualquier expresión.</summary>
      <returns>Número de bytes del valor de entrada.</returns>
      <param name="arg">Valor que se va a examinar para la longitud de datos.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.TimeSpan})">
      <summary>Devuelve el número de bytes utilizados para representar cualquier expresión.</summary>
      <returns>Número de bytes del valor de entrada.</returns>
      <param name="arg">Valor que se va a examinar para la longitud de datos.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.String)">
      <summary>Devuelve el número de bytes utilizados para representar cualquier expresión.</summary>
      <returns>Número de bytes del valor de entrada.</returns>
      <param name="arg">Valor que se va a examinar para la longitud de datos.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTime})">
      <summary>Devuelve un nuevo valor datetime que se basa en agregar un intervalo a la fecha especificada.</summary>
      <returns>Nueva fecha.</returns>
      <param name="datePartArg">Parte de la fecha que se va a incrementar.</param>
      <param name="number">Valor que se usa para incrementar una fecha en la cantidad especificada.</param>
      <param name="date">Fecha que se va a incrementar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTimeOffset})">
      <summary>Devuelve un nuevo valor de fecha que se basa en agregar un intervalo a la fecha especificada.</summary>
      <returns>Nuevo momento en el tiempo, expresado como una fecha y hora del día, relativo a la hora universal coordinada (UTC).</returns>
      <param name="datePartArg">Parte de la fecha que se va a incrementar.</param>
      <param name="number">Valor que se usa para incrementar una fecha en la cantidad especificada.</param>
      <param name="dateTimeOffsetArg">Fecha que se va a incrementar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.TimeSpan})">
      <summary>Devuelve un nuevo valor de intervalo de tiempo basado en agregar un intervalo al intervalo de tiempo especificado.</summary>
      <returns>Nuevo intervalo de tiempo.</returns>
      <param name="datePartArg">Parte de la fecha que se va a incrementar.</param>
      <param name="number">Valor que se usa para incrementar una fecha en la cantidad especificada.</param>
      <param name="time">Intervalo de tiempo que se va a incrementar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.String)">
      <summary>Devuelve un nuevo valor datetime que se basa en agregar un intervalo a la fecha especificada.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> de un valor <see cref="T:System.DateTime" /> que es la nueva fecha.</returns>
      <param name="datePartArg">Parte de la fecha que se va a incrementar.</param>
      <param name="number">Valor que se usa para incrementar una fecha en la cantidad especificada.</param>
      <param name="date">Fecha que se va a incrementar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Devuelve el recuento de los límites del datepart especificados entre la fecha de inicio y la fecha de fin definidas.</summary>
      <returns>Número de intervalos de tiempo que hay entre dos fechas.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="startDate">Primera fecha.</param>
      <param name="endDate">Segunda fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTimeOffset})">
      <summary>Devuelve el recuento de los límites del datepart especificados entre la fecha de inicio y la fecha de fin definidas.</summary>
      <returns>Número de intervalos de tiempo que hay entre dos fechas.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="startDate">Primera fecha.</param>
      <param name="endDate">Segunda fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan})">
      <summary>Devuelve el recuento de los límites del datepart especificados entre la fecha de inicio y la fecha de fin definidas.</summary>
      <returns>Número de intervalos de tiempo que hay entre dos fechas.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="startDate">Primera fecha.</param>
      <param name="endDate">Segunda fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.String)">
      <summary>Devuelve el recuento de los límites del datepart especificados entre la fecha de inicio y la fecha de fin definidas.</summary>
      <returns>Número de intervalos de tiempo que hay entre dos fechas.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="startDate">Primera fecha.</param>
      <param name="endDate">Segunda fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTime})">
      <summary>Devuelve el recuento de los límites del datepart especificados entre la fecha de inicio y la fecha de fin definidas.</summary>
      <returns>Número de intervalos de tiempo que hay entre dos fechas.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="startDate">Primera fecha.</param>
      <param name="endDate">Segunda fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Devuelve el recuento de los límites del datepart especificados entre la fecha de inicio y la fecha de fin definidas.</summary>
      <returns>Número de intervalos de tiempo que hay entre dos fechas.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="startDate">Primera fecha.</param>
      <param name="endDate">Segunda fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})">
      <summary>Devuelve el recuento de los límites del datepart especificados entre la fecha de inicio y la fecha de fin definidas.</summary>
      <returns>Número de intervalos de tiempo que hay entre dos fechas.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="startDate">Primera fecha.</param>
      <param name="endDate">Segunda fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.String)">
      <summary>Devuelve el recuento de los límites del datepart especificados entre la fecha de inicio y la fecha de fin definidas.</summary>
      <returns>Número de intervalos de tiempo que hay entre dos fechas.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="startDate">Primera fecha.</param>
      <param name="endDate">Segunda fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTime})">
      <summary>Devuelve el recuento de los límites del datepart especificados entre la fecha de inicio y la fecha de fin definidas.</summary>
      <returns>Número de intervalos de tiempo que hay entre dos fechas.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="startDate">Primera fecha.</param>
      <param name="endDate">Segunda fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTimeOffset})">
      <summary>Devuelve el recuento de los límites del datepart especificados entre la fecha de inicio y la fecha de fin definidas.</summary>
      <returns>Número de intervalos de tiempo que hay entre dos fechas.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="startDate">Primera fecha.</param>
      <param name="endDate">Segunda fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>Devuelve el recuento de los límites del datepart especificados entre la fecha de inicio y la fecha de fin definidas.</summary>
      <returns>Número de intervalos de tiempo que hay entre dos fechas.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="startDate">Primera fecha.</param>
      <param name="endDate">Segunda fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.String)">
      <summary>Devuelve el recuento de los límites del datepart especificados entre la fecha de inicio y la fecha de fin definidas.</summary>
      <returns>Número de intervalos de tiempo que hay entre dos fechas.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="startDate">Primera fecha.</param>
      <param name="endDate">Segunda fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTime})">
      <summary>Devuelve el recuento de los límites del datepart especificados entre la fecha de inicio y la fecha de fin definidas.</summary>
      <returns>Número de intervalos de tiempo que hay entre dos fechas.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="startDate">Primera fecha.</param>
      <param name="endDate">Segunda fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTimeOffset})">
      <summary>Devuelve el recuento de los límites del datepart especificados entre la fecha de inicio y la fecha de fin definidas.</summary>
      <returns>Número de intervalos de tiempo que hay entre dos fechas.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="startDate">Primera fecha.</param>
      <param name="endDate">Segunda fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.TimeSpan})">
      <summary>Devuelve el recuento de los límites del datepart especificados entre la fecha de inicio y la fecha de fin definidas.</summary>
      <returns>Valor que especifica el número de intervalos de tiempo entre dos fechas.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="startDate">Primera fecha.</param>
      <param name="endDate">Segunda fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.String)">
      <summary>Devuelve el recuento de los límites del datepart especificados entre la fecha de inicio y la fecha de fin definidas.</summary>
      <returns>Número de intervalos de tiempo que hay entre dos fechas.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="startDate">Primera fecha.</param>
      <param name="endDate">Segunda fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.Nullable{System.DateTime})">
      <summary>Devuelve una cadena de caracteres que representa el datepart de la fecha especificada.</summary>
      <returns>Parte especificada de la fecha especificada.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="date">Fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.Nullable{System.DateTimeOffset})">
      <summary>Devuelve una cadena de caracteres que representa el datepart de la fecha especificada.</summary>
      <returns>Parte especificada de la fecha especificada.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="date">Fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.Nullable{System.TimeSpan})">
      <summary>Devuelve una cadena de caracteres que representa el datepart de la fecha especificada.</summary>
      <returns>Parte especificada de la fecha especificada.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="date">Fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.String)">
      <summary>Devuelve una cadena de caracteres que representa el datepart de la fecha especificada.</summary>
      <returns>Parte especificada de la fecha especificada.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para calcular el número de intervalos de tiempo diferentes.</param>
      <param name="date">Fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTime})">
      <summary>Devuelve un entero que representa el datepart especificado de la fecha especificada.</summary>
      <returns>Datepart especificado de la fecha especificada.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para devolver el valor.</param>
      <param name="date">Fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTimeOffset})">
      <summary>Devuelve un entero que representa el datepart especificado de la fecha especificada.</summary>
      <returns>Datepart especificado de la fecha especificada.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para devolver el valor.</param>
      <param name="date">Fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.Nullable{System.TimeSpan})">
      <summary>Devuelve un entero que representa el datepart especificado de la fecha especificada.</summary>
      <returns>Datepart especificado de la fecha especificada.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para devolver el valor.</param>
      <param name="date">Fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.String)">
      <summary>Devuelve un entero que representa el datepart especificado de la fecha especificada.</summary>
      <returns>Datepart especificado de la fecha especificada.</returns>
      <param name="datePartArg">Parte de la fecha que se usa para devolver el valor.</param>
      <param name="date">Fecha.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Decimal})">
      <summary>Devuelve el ángulo correspondiente en grados para un ángulo especificado en radianes.</summary>
      <returns>Ángulo especificado convertido en grados.</returns>
      <param name="arg1">Ángulo, medido en radianes.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Double})">
      <summary>Devuelve el ángulo correspondiente en grados para un ángulo especificado en radianes.</summary>
      <returns>Ángulo especificado convertido en grados.</returns>
      <param name="arg1">Ángulo, medido en radianes.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Int32})">
      <summary>Devuelve el ángulo correspondiente en grados para un ángulo especificado en radianes.</summary>
      <returns>Ángulo especificado convertido en grados.</returns>
      <param name="arg1">Ángulo, medido en radianes.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Int64})">
      <summary>Devuelve el ángulo correspondiente en grados para un ángulo especificado en radianes.</summary>
      <returns>Ángulo especificado convertido en grados.</returns>
      <param name="arg1">Ángulo, medido en radianes.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Difference(System.String,System.String)">
      <summary>Devuelve un valor entero que indica la diferencia entre los valores de SOUNDEX de dos expresiones de caracteres.</summary>
      <returns>Diferencia de SOUNDEX entre las dos cadenas.</returns>
      <param name="string1">Primera cadena.</param>
      <param name="string2">Segunda cadena.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Exp(System.Nullable{System.Decimal})">
      <summary>Devuelve el valor exponencial de la expresión flotante especificada.</summary>
      <returns>Constante e elevada a la potencia del valor de entrada.</returns>
      <param name="arg">Valor de entrada.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Exp(System.Nullable{System.Double})">
      <summary>Devuelve el valor exponencial de la expresión flotante especificada.</summary>
      <returns>Constante e elevada a la potencia del valor de entrada.</returns>
      <param name="arg">Valor de entrada.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.GetDate">
      <summary>Devuelve la marca de tiempo del sistema de base de datos actual como un valor datetime sin el desplazamiento de zona horaria de la base de datos.Este valor se deriva del sistema operativo del equipo en el que se está ejecutando la instancia de SQL Server.</summary>
      <returns>Marca de tiempo de la base de datos actual.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.GetUtcDate">
      <summary>Devuelve la marca de tiempo del sistema de base de datos actual como un valor datetime.El desplazamiento de zona horaria de la base de datos no está incluido.Este valor representa la hora UTC (Hora universal coordinada) actual.Este valor se deriva del sistema operativo del equipo en el que se está ejecutando la instancia de SQL Server.</summary>
      <returns>Marca de tiempo UTC de la base de datos actual.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.HostName">
      <summary>Devuelve el nombre de la estación de trabajo.</summary>
      <returns>Nombre de la estación de trabajo.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.IsDate(System.String)">
      <summary>Indica si el valor de entrada es una fecha u hora válida.</summary>
      <returns>1 si la expresión de entrada es una fecha válida o un valor de datetime o de los tipos de datos smalldatetime; de lo contrario, 0.</returns>
      <param name="arg">Valor probado.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.IsNumeric(System.String)">
      <summary>Indica si el valor de entrada es un tipo numérico válido.</summary>
      <returns>1 si la expresión de entrada es de un tipo de datos numéricos válido; de lo contrario, 0.</returns>
      <param name="arg">Expresión de cadena.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log(System.Nullable{System.Decimal})">
      <summary>Devuelve el logaritmo natural del valor de entrada especificado.</summary>
      <returns>Logaritmo natural del valor de entrada.</returns>
      <param name="arg">Expresión numérica.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log(System.Nullable{System.Double})">
      <summary>Devuelve el logaritmo natural del valor de entrada especificado.</summary>
      <returns>Logaritmo natural del valor de entrada.</returns>
      <param name="arg">Expresión numérica.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log10(System.Nullable{System.Decimal})">
      <summary>Devuelve el logaritmo en base 10 del valor de entrada especificado.</summary>
      <returns>Logaritmo en base 10 del valor de entrada.</returns>
      <param name="arg">Expresión numérica.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log10(System.Nullable{System.Double})">
      <summary>Devuelve el logaritmo en base 10 del valor de entrada especificado.</summary>
      <returns>Logaritmo en base 10 del valor de entrada.</returns>
      <param name="arg">Expresión numérica.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.NChar(System.Nullable{System.Int32})">
      <summary>Devuelve el carácter Unicode correspondiente al código entero dado, tal como se define en el estándar Unicode.</summary>
      <returns>Carácter correspondiente al código del carácter de entrada.</returns>
      <param name="arg">Código de carácter.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.PatIndex(System.String,System.String)">
      <summary>Devuelve la posición inicial de la primera aparición de un modelo en una expresión especificada, o cero si no se encuentra el modelo, en todo el texto válido y los tipos de datos de caracteres.</summary>
      <returns>Posición inicial de caracteres donde se encontró el modelo de la cadena.</returns>
      <param name="stringPattern">Modelo de cadena que se va a buscar.</param>
      <param name="target">Cadena que se va a buscar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Pi">
      <summary>Devuelve el valor constante de Pi.</summary>
      <returns>Valor numérico de Pi.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.QuoteName(System.String)">
      <summary>Devuelve una cadena Unicode a la que se han agregado delimitadores para convertir la cadena de entrada en un identificador delimitado válido de Microsoft SQL Server.</summary>
      <returns>Cadena original a la que se han agregado corchetes.</returns>
      <param name="stringArg">Expresión a la que se agregarán los caracteres de comillas.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.QuoteName(System.String,System.String)">
      <summary>Devuelve una cadena Unicode a la que se han agregado delimitadores para convertir la cadena de entrada en un identificador delimitado válido de Microsoft SQL Server.</summary>
      <returns>Cadena original a la que se han agregado los caracteres de comillas.</returns>
      <param name="stringArg">Expresión a la que se agregarán los caracteres de comillas.</param>
      <param name="quoteCharacter">Cadena de un solo carácter que se utiliza como delimitador.Puede ser una comilla simple ('), un corchete izquierdo o derecho ([ ]) o una comilla doble (").Si no se especifica el carácter de comillas, se usarán corchetes.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Decimal})">
      <summary>Devuelve la medida en radianes correspondiente al ángulo especificado en grados.</summary>
      <returns>Medida en radianes del ángulo especificado.</returns>
      <param name="arg">Ángulo, medido en grados.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Double})">
      <summary>Devuelve la medida en radianes correspondiente al ángulo especificado en grados.</summary>
      <returns>Medida en radianes del ángulo especificado.</returns>
      <param name="arg">Ángulo, medido en grados.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Int32})">
      <summary>Devuelve la medida en radianes correspondiente al ángulo especificado en grados.</summary>
      <returns>Medida en radianes del ángulo especificado.</returns>
      <param name="arg">Ángulo, medido en grados.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Int64})">
      <summary>Devuelve la medida en radianes correspondiente al ángulo especificado en grados.</summary>
      <returns>Medida en radianes del ángulo especificado.</returns>
      <param name="arg">Ángulo, medido en grados.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Rand">
      <summary>Devuelve un valor flotante pseudoaleatorio entre 0 y 1, excluidos.</summary>
      <returns>Valor pseudoaleatorio.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Rand(System.Nullable{System.Int32})">
      <summary>Devuelve un valor flotante pseudoaleatorio entre 0 y 1, excluidos.</summary>
      <returns>Valor pseudoaleatorio.</returns>
      <param name="seed">Valor de inicialización.Si la inicialización no se especifica, el motor de base de datos de SQL Server asigna uno de forma aleatoria.Para un valor de inicialización especificado, el resultado devuelto es siempre el mismo.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Replicate(System.String,System.Nullable{System.Int32})">
      <summary>Repite un valor de cadena un número especificado de veces.</summary>
      <returns>Cadena de destino, repetida el número de veces especificado por recuento.</returns>
      <param name="target">Cadena válida.</param>
      <param name="count">Valor que especifica cuántas veces se va a repetir destino.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Decimal})">
      <summary>Devuelve el signo positivo (+1), cero (0) o negativo (-1) de la expresión especificada.</summary>
      <returns>Signo de la expresión de entrada.</returns>
      <param name="arg">Expresión numérica.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Double})">
      <summary>Devuelve el signo positivo (+1), cero (0) o negativo (-1) de la expresión especificada.</summary>
      <returns>Signo de la expresión de entrada.</returns>
      <param name="arg">Expresión numérica.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Int32})">
      <summary>Devuelve el signo positivo (+1), cero (0) o negativo (-1) de la expresión especificada.</summary>
      <returns>Signo de la expresión de entrada.</returns>
      <param name="arg">Expresión numérica.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Int64})">
      <summary>Devuelve el signo positivo (+1), cero (0) o negativo (-1) de la expresión especificada.</summary>
      <returns>Signo de la expresión de entrada.</returns>
      <param name="arg">Expresión numérica.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sin(System.Nullable{System.Decimal})">
      <summary>Devuelve el seno trigonométrico del ángulo especificado.</summary>
      <returns>Seno trigonométrico de la expresión de entrada.</returns>
      <param name="arg">Ángulo, medido en radianes.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sin(System.Nullable{System.Double})">
      <summary>Devuelve el seno trigonométrico del ángulo especificado.</summary>
      <returns>Seno trigonométrico de la expresión de entrada.</returns>
      <param name="arg">Ángulo, medido en radianes.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.SoundCode(System.String)">
      <summary>Convierte una cadena alfanumérica en un código de cuatro caracteres (SOUNDEX) que se usa para buscar palabras o nombres con un sonido parecido.</summary>
      <returns>Código SOUNDEX de la cadena de entrada.</returns>
      <param name="arg">Cadena válida.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Space(System.Nullable{System.Int32})">
      <summary>Devuelve una cadena de espacios repetidos.</summary>
      <returns>Una cadena compuesta por el número especificado de espacios.</returns>
      <param name="arg1">Número de espacios.Si es negativo, se devuelve una cadena nula.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Square(System.Nullable{System.Decimal})">
      <summary>Devuelve el cuadrado del número especificado.</summary>
      <returns>Cuadrado del valor de entrada.</returns>
      <param name="arg1">Expresión numérica.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Square(System.Nullable{System.Double})">
      <summary>Devuelve el cuadrado del número especificado.</summary>
      <returns>Cuadrado del valor de entrada.</returns>
      <param name="arg1">Expresión numérica.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.SquareRoot(System.Nullable{System.Decimal})">
      <summary>Devuelve la raíz cuadrada del número especificado.</summary>
      <returns>Raíz cuadrada del valor de entrada.</returns>
      <param name="arg">Expresión numérica.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.SquareRoot(System.Nullable{System.Double})">
      <summary>Devuelve la raíz cuadrada del número especificado.</summary>
      <returns>Raíz cuadrada del valor de entrada.</returns>
      <param name="arg">Expresión numérica.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Decimal})">
      <summary>Devuelve datos de caracteres convertidos a partir de datos numéricos.</summary>
      <returns>Expresión de entrada convertida en una cadena.</returns>
      <param name="number">Expresión numérica.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32})">
      <summary>Devuelve datos de caracteres convertidos a partir de datos numéricos.</summary>
      <returns>Expresión de entrada convertida en una cadena.</returns>
      <param name="number">Expresión numérica.</param>
      <param name="length">Longitud total de la cadena.Incluye el separador decimal, el signo, los dígitos y los espacios.El valor predeterminado es 10.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <summary>Devuelve datos de caracteres convertidos a partir de datos numéricos.</summary>
      <returns>Expresión de entrada convertida en una cadena.</returns>
      <param name="number">Expresión numérica.</param>
      <param name="length">Longitud total de la cadena.Incluye el separador decimal, el signo, los dígitos y los espacios.El valor predeterminado es 10.</param>
      <param name="decimalArg">Número de posiciones a la derecha del separador decimal.decimal debe ser menor o igual que 16.Si decimal es mayor que 16, el resultado se trunca a dieciséis lugares a la derecha del separador decimal.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Double})">
      <summary>Devuelve datos de caracteres convertidos a partir de datos numéricos.</summary>
      <returns>Expresión de entrada numérica convertida en una cadena.</returns>
      <param name="number">Expresión numérica.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>Devuelve datos de caracteres convertidos a partir de datos numéricos.</summary>
      <returns>Expresión de entrada numérica convertida en una cadena.</returns>
      <param name="number">Expresión numérica.</param>
      <param name="length">Longitud total de la cadena.Incluye el separador decimal, el signo, los dígitos y los espacios.El valor predeterminado es 10.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <summary>Devuelve datos de caracteres convertidos a partir de datos numéricos.</summary>
      <returns>Expresión de entrada numérica convertida en una cadena.</returns>
      <param name="number">Expresión numérica.</param>
      <param name="length">Longitud total de la cadena.Incluye el separador decimal, el signo, los dígitos y los espacios.El valor predeterminado es 10.</param>
      <param name="decimalArg">Número de posiciones a la derecha del separador decimal.decimal debe ser menor o igual que 16.Si decimal es mayor que 16, el resultado se trunca a dieciséis lugares a la derecha del separador decimal.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Stuff(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
      <summary>Inserta una cadena en otra cadena.Elimina una longitud especificada de caracteres en la cadena de destino en la posición inicial y, a continuación, inserta la segunda cadena en la cadena de destino en la posición inicial.</summary>
      <returns>Cadena que consta de dos cadenas.</returns>
      <param name="stringInput">Cadena de destino.</param>
      <param name="start">Posición del carácter en stringinput donde se va a insertar la cadena de reemplazo.</param>
      <param name="length">Número de caracteres que se van a eliminar de stringInput.Si la longitud es mayor que stringInput, se produce la eliminación hasta el último carácter en stringReplacement.</param>
      <param name="stringReplacement">Subcadena que se va a insertar en stringInput.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Tan(System.Nullable{System.Decimal})">
      <summary>Devuelve la tangente trigonométrica de la expresión de entrada.</summary>
      <returns>Tangente del ángulo de entrada.</returns>
      <param name="arg">Ángulo, medido en radianes.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Tan(System.Nullable{System.Double})">
      <summary>Devuelve la tangente trigonométrica de la expresión de entrada.</summary>
      <returns>Tangente del ángulo de entrada.</returns>
      <param name="arg">Ángulo, medido en radianes.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Unicode(System.String)">
      <summary>Devuelve el valor entero, según la definición del estándar Unicode, para el primer carácter de la expresión de entrada.</summary>
      <returns>Código de carácter del primer carácter en la cadena de entrada.</returns>
      <param name="arg">Cadena válida.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.UserName">
      <summary>Devuelve un nombre de usuario de base de datos que corresponde a un número de identificación especificado.</summary>
      <returns>Nombre del usuario.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.UserName(System.Nullable{System.Int32})">
      <summary>Devuelve un nombre de usuario de base de datos que corresponde a un número de identificación especificado.</summary>
      <returns>Nombre del usuario.</returns>
      <param name="arg">Identificador de usuario.</param>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlProviderServices">
      <summary>Implementación de DbProviderServices para el proveedor SqlClient para SQL Server.</summary>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlProviderServices.Instance">
      <summary>Instancia Singleton del tipo SqlProviderServices.</summary>
      <returns>
        <see cref="T:System.Data.Entity.SqlServer.SqlProviderServices" />.</returns>
    </member>
    <member name="F:System.Data.Entity.SqlServer.SqlProviderServices.ProviderInvariantName">
      <summary>Esta es la cadena bien conocida que se utiliza en archivos de configuración y configuración basada en código como el "nombre invariable de proveedor" para especificar Microsoft SQL Server para los servicios de proveedor ADO.NET y Entity Framework.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlProviderServices.RegisterInfoMessageHandler(System.Data.Common.DbConnection,System.Action{System.String})">
      <summary>Registra un controlador para procesar mensajes no de error procedentes del proveedor de la base de datos.</summary>
      <param name="connection">La conexión para la cual recibir información.</param>
      <param name="handler">El controlador para procesar mensajes.</param>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlProviderServices.SqlServerTypesAssemblyName">
      <summary>Establecido en el nombre completo del ensamblado Microsoft.SqlServer.Types para invalidar la selección predeterminada</summary>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlProviderServices.TruncateDecimalsToScale">
      <summary>Establezca este indicador en falso para evitar que los valores <see cref="T:System.Decimal" /> se trunquen a la escala (número de posiciones decimales) definidas para la columna.El valor predeterminado es true, indicando que los valores decimales se trucarán para evitar romper las aplicaciones existentes que dependen de esta conducta.</summary>
      <returns>Devuelve <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator">
      <summary>Representa un proveedor para convertir operaciones de migración independientes de proveedor en comandos SQL que se pueden ejecutar frente a una base de datos de Microsoft SQL Server.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator" />.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.BuildColumnType(System.Data.Entity.Migrations.Model.ColumnModel)">
      <summary>Genera SQL para especificar el tipo de datos de una columna.Este método genera solamente el tipo real, no el SQL para crear la columna.</summary>
      <returns>SQL que representa el tipo de datos.</returns>
      <param name="columnModel">Definición de la columna.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.CreateConnection">
      <summary>Crea una conexión vacía para el proveedor actual.Permite que los proveedores derivados usen una conexión que no sea <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
      <returns>Conexión vacía para el proveedor actual.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.DropDefaultConstraint(System.String,System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Llame a este método para generar SQL que intentará quitar la restricción predeterminada creada cuando se crea una columna.El código que invalida la creación o modificación de columnas suele llamar a este método.</summary>
      <param name="table">Tabla a la que se aplica la restricción.</param>
      <param name="column">Columna a la que se aplica la restricción.</param>
      <param name="writer">Sistema de escritura en el que se debe escribir el SQL generado.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Boolean)">
      <summary>Genera SQL para especificar un valor predeterminado bool constante que se va a establecer en una columna.Este método genera solamente el valor real, no el SQL para establecer el valor predeterminado.</summary>
      <returns>SQL que representa el valor predeterminado.</returns>
      <param name="defaultValue">Valor que hay que establecer.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Byte[])">
      <summary>Genera SQL para especificar un valor predeterminado byte[] constante que se va a establecer en una columna.Este método genera solamente el valor real, no el SQL para establecer el valor predeterminado.</summary>
      <returns>SQL que representa el valor predeterminado.</returns>
      <param name="defaultValue">Valor que hay que establecer.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String)">
      <summary>Convierte un conjunto de operaciones de migración en SQL específico de Microsoft SQL Server.</summary>
      <returns>Lista de instrucciones SQL que se van a ejecutar para realizar las operaciones de migración.</returns>
      <param name="migrationOperations">Operaciones que se van a convertir.</param>
      <param name="providerManifestToken">Token que representa la versión de SQL Server de destino (es decir, "2005", "2008").</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddColumnOperation)">
      <summary>Genera SQL para una <see cref="T:System.Data.Entity.Migrations.Model.AddColumnOperation" />.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="addColumnOperation">Operación para la que se va a producir SQL.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddForeignKeyOperation)">
      <summary>Genera SQL para una <see cref="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation" />.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="addForeignKeyOperation">Operación para la que se va a producir SQL.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation)">
      <summary>Genera SQL para una <see cref="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation" />.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="addPrimaryKeyOperation">Operación para la que se va a producir SQL.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterColumnOperation)">
      <summary>Genera SQL para una <see cref="T:System.Data.Entity.Migrations.Model.AlterColumnOperation" />.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="alterColumnOperation">Operación para la que se va a producir SQL.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterProcedureOperation)">
      <summary>Genera la operación especificada para modificar un procedimiento.</summary>
      <param name="alterProcedureOperation">Operación para modificar un procedimiento.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterTableOperation)">
      <summary>Invalide este método para generar SQL cuando cambie la definición de una tabla o sus atributos.La implementación predeterminada de este método no hace nada.</summary>
      <param name="alterTableOperation">Operación que describe los cambios en la tabla.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.ColumnModel,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera SQL para el modelo de columnas especificado.La llamada a este método la realizan otros métodos que procesan columnas y se puede invalidar para cambiar el SQL generado.</summary>
      <param name="column">Columna para la que se genera SQL.</param>
      <param name="writer">Sistema de escritura en el que se debe escribir el SQL generado.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateIndexOperation)">
      <summary>Genera SQL para una <see cref="T:System.Data.Entity.Migrations.Model.CreateIndexOperation" />.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="createIndexOperation">Operación para la que se va a producir SQL.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateProcedureOperation)">
      <summary>Genera la operación especificada para crear un procedimiento.</summary>
      <param name="createProcedureOperation">Operación para crear un procedimiento.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateTableOperation)">
      <summary>Genera SQL para una <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="createTableOperation">Operación para la que se va a producir SQL.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropColumnOperation)">
      <summary>Genera SQL para una <see cref="T:System.Data.Entity.Migrations.Model.DropColumnOperation" />.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="dropColumnOperation">Operación para la que se va a producir SQL.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropForeignKeyOperation)">
      <summary>Genera SQL para una <see cref="T:System.Data.Entity.Migrations.Model.DropForeignKeyOperation" />.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="dropForeignKeyOperation">Operación para la que se va a producir SQL.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropIndexOperation)">
      <summary>Genera SQL para una <see cref="T:System.Data.Entity.Migrations.Model.DropIndexOperation" />.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="dropIndexOperation">Operación para la que se va a producir SQL.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation)">
      <summary>Genera SQL para una <see cref="T:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation" />.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="dropPrimaryKeyOperation">Operación para la que se va a producir SQL.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropProcedureOperation)">
      <summary>Genera la operación especificada para quitar un procedimiento.</summary>
      <param name="dropProcedureOperation">Operación para quitar un procedimiento.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropTableOperation)">
      <summary>Genera SQL para una <see cref="T:System.Data.Entity.Migrations.Model.DropTableOperation" />.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="dropTableOperation">Operación para la que se va a producir SQL.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.HistoryOperation)">
      <summary>Genera SQL para una <see cref="T:System.Data.Entity.Migrations.Model.HistoryOperation" />.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="historyOperation">Operación para la que se va a producir SQL.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MigrationOperation)">
      <summary>Genera SQL para una <see cref="T:System.Data.Entity.Migrations.Model.MigrationOperation" />.Permite que proveedores derivados administren tipos de operación adicionales.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="migrationOperation">Operación para la que se va a producir SQL.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MoveProcedureOperation)">
      <summary>Genera la operación especificada para mover un procedimiento.</summary>
      <param name="moveProcedureOperation">Operación para mover un procedimiento.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MoveTableOperation)">
      <summary>Genera SQL para una <see cref="T:System.Data.Entity.Migrations.Model.MoveTableOperation" />.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="moveTableOperation">Operación para la que se va a producir SQL.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameColumnOperation)">
      <summary>Genera SQL para una <see cref="T:System.Data.Entity.Migrations.Model.RenameColumnOperation" />.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="renameColumnOperation">Operación para la que se va a producir SQL.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameIndexOperation)">
      <summary>Genera SQL para una <see cref="T:System.Data.Entity.Migrations.Model.RenameIndexOperation" />.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="renameIndexOperation">Operación para la que se va a producir SQL.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameProcedureOperation)">
      <summary>Genera la operación especificada para cambiar el nombre de un procedimiento.</summary>
      <param name="renameProcedureOperation">Operación para cambiar el nombre de un procedimiento.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameTableOperation)">
      <summary>Genera SQL para una <see cref="T:System.Data.Entity.Migrations.Model.RenameTableOperation" />.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="renameTableOperation">Operación para la que se va a producir SQL.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.SqlOperation)">
      <summary>Genera SQL para una <see cref="T:System.Data.Entity.Migrations.Model.SqlOperation" />.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="sqlOperation">Operación para la que se va a producir SQL.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.UpdateDatabaseOperation)">
      <summary>Genera la operación especificada de actualización de base de datos que representa la aplicación de una serie de migraciones.El script generado es idempotente, lo que significa que contiene lógica condicional para comprobar si ya se han aplicado migraciones individuales y aplicar solo las pendientes.</summary>
      <param name="updateDatabaseOperation">Operación de actualización de base de datos.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Spatial.DbGeography)">
      <summary>Genera SQL para especificar un valor predeterminado de geografía constante que se va a establecer en una columna.Este método genera solamente el valor real, no el SQL para establecer el valor predeterminado.</summary>
      <returns>SQL que representa el valor predeterminado.</returns>
      <param name="defaultValue">Valor que hay que establecer.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Genera SQL para especificar un valor predeterminado de geometría constante que se va a establecer en una columna.Este método genera solamente el valor real, no el SQL para establecer el valor predeterminado.</summary>
      <returns>SQL que representa el valor predeterminado.</returns>
      <param name="defaultValue">Valor que hay que establecer.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.DateTime)">
      <summary>Genera SQL para especificar un valor predeterminado DateTime constante que se va a establecer en una columna.Este método genera solamente el valor real, no el SQL para establecer el valor predeterminado.</summary>
      <returns>SQL que representa el valor predeterminado.</returns>
      <param name="defaultValue">Valor que hay que establecer.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.DateTimeOffset)">
      <summary>Genera SQL para especificar un valor predeterminado DateTimeOffset constante que se va a establecer en una columna.Este método genera solamente el valor real, no el SQL para establecer el valor predeterminado.</summary>
      <returns>SQL que representa el valor predeterminado.</returns>
      <param name="defaultValue">Valor que hay que establecer.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Guid)">
      <summary>Genera SQL para especificar un valor predeterminado Guid constante que se va a establecer en una columna.Este método genera solamente el valor real, no el SQL para establecer el valor predeterminado.</summary>
      <returns>SQL que representa el valor predeterminado.</returns>
      <param name="defaultValue">Valor que hay que establecer.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Object)">
      <summary>Genera SQL para especificar un valor predeterminado constante que se va a establecer en una columna.Este método genera solamente el valor real, no el SQL para establecer el valor predeterminado.</summary>
      <returns>SQL que representa el valor predeterminado.</returns>
      <param name="defaultValue">Valor que hay que establecer.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.String)">
      <summary>Genera SQL para especificar un valor predeterminado de cadena constante que se va a establecer en una columna.Este método genera solamente el valor real, no el SQL para establecer el valor predeterminado.</summary>
      <returns>SQL que representa el valor predeterminado.</returns>
      <param name="defaultValue">Valor que hay que establecer.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.TimeSpan)">
      <summary>Genera SQL para especificar un valor predeterminado TimeSpan constante que se va a establecer en una columna.Este método genera solamente el valor real, no el SQL para establecer el valor predeterminado.</summary>
      <returns>SQL que representa el valor predeterminado.</returns>
      <param name="defaultValue">Valor que hay que establecer.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GenerateCreateSchema(System.String)">
      <summary>Genera SQL para crear un esquema de la base de datos.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="schema">Nombre del esquema que se va a crear.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GenerateMakeSystemTable(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera SQL para marcar una tabla como tabla del sistema.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="createTableOperation">Tabla para marcar como tabla del sistema.</param>
      <param name="writer">
        <see cref="T:System.Data.Entity.Migrations.Utilities.IndentedTextWriter" /> en el que se va a escribir el SQL generado.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GenerateProcedureBody(System.Collections.Generic.ICollection{System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree},System.String,System.String)">
      <summary>Genera un cuerpo de SQL para un procedimiento almacenado.</summary>
      <returns>El cuerpo de SQL para el procedimiento almacenado.</returns>
      <param name="commandTrees">Los árboles de comandos representan comandos para una operación de inserción, actualización o borrado.</param>
      <param name="rowsAffectedParameter">Nombre del parámetro afectado por las filas.</param>
      <param name="providerManifestToken">Token del manifiesto del proveedor.</param>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GuidColumnDefault">
      <summary>Devuelve el valor predeterminado de columna que se usará para las columnas GUID generadas por el almacén cuando no se especifique explícitamente ningún valor predeterminado en la migración.Devuelve newsequentialid() para SQL Server 2005 local y versiones posteriores.Devuelve newid() para SQL Azure.</summary>
      <returns>Newsequentialid() o newid() como se ha descrito anteriormente.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Name(System.String)">
      <summary>Genera un nombre citado.El nombre suministrado puede incluir o no el esquema.</summary>
      <returns>Nombre citado.</returns>
      <param name="name">Nombre que se va a citar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Quote(System.String)">
      <summary>Cita un identificador para SQL Server.</summary>
      <returns>Identificador citado.</returns>
      <param name="identifier">Identificador que se cita.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Statement(System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.String)">
      <summary>Agrega una instrucción nueva que se va a ejecutar frente a la base de datos.</summary>
      <param name="writer">Escritor que contiene el SQL que se va a ejecutar.</param>
      <param name="batchTerminator">El terminador de lote del proveedor de base de datos.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Statement(System.String,System.Boolean,System.String)">
      <summary>Agrega una instrucción nueva que se va a ejecutar frente a la base de datos.</summary>
      <param name="sql">Instrucción que se va a ejecutar.</param>
      <param name="suppressTransaction">Indica si esta instrucción debe realizarse fuera del ámbito de la transacción que se usa para llevar a cabo el proceso de migración entre transacciones.Si se establece en true, esta operación no se revertirá si se produce un error en el proceso de migración.</param>
      <param name="batchTerminator">El terminador de lote del proveedor de base de datos.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.StatementBatch(System.String,System.Boolean)">
      <summary>Divide la cadena SQL en una o más instrucciones y controla las instrucciones de utilidades T-SQL según corresponda.</summary>
      <param name="sqlBatch">SQL que se divide en una o más instrucciones que se ejecutan.</param>
      <param name="suppressTransaction">Obtiene o establece un valor que indica si esta instrucción debe realizarse fuera del ámbito de la transacción que se usa para llevar a cabo el proceso de migración entre transacciones.Si se establece en true, esta operación no se revertirá si se produce un error en el proceso de migración.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.WriteCreateTable(System.Data.Entity.Migrations.Model.CreateTableOperation)">
      <summary>Genera SQL para una <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />.El SQL que se haya generado se debe agregar con el método Statement.</summary>
      <param name="createTableOperation">Operación para la que se va a producir SQL.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.WriteCreateTable(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Escribe CREATE TABLE SQL en el sistema de escritura de destino.</summary>
      <param name="createTableOperation">Operación para la que se va a producir SQL.</param>
      <param name="writer">Sistema de escritura de destino.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Writer">
      <summary>Obtiene un nuevo <see cref="T:System.Data.Entity.Migrations.Utilities.IndentedTextWriter" /> que se puede usar para generar SQL.Se trata simplemente de un método auxiliar para crear un escritor.Al escribir en el sistema de escritura, SQL no se registrará para su ejecución.Es preciso que pase el SQL generado al método Statement.</summary>
      <returns>Escritor de texto vacío que se va a usar para la generación de SQL.</returns>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlSpatialFunctions">
      <summary>Contiene códigos auxiliares de funciones que exponen métodos de SQL Server en consultas Linq to Entities.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.AsTextZM(System.Data.Entity.Spatial.DbGeography)">
      <summary>Devuelve la representación del bien conocido texto (WKT) del Consorcio Geoespacial Abierto (OGC) de una instancia geográfica aumentada con cualesquiera valores Z (elevación) y M (medida) que contenga la instancia.</summary>
      <returns>Representación del bien conocido texto (WKT) del Consorcio Geoespacial Abierto (OGC) de una instancia de geografía.</returns>
      <param name="geographyValue">Valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.AsTextZM(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve la representación del bien conocido texto (WKT) del Consorcio Geoespacial Abierto (OGC) de una instancia geográfica aumentada con cualesquiera valores Z (elevación) y M (medida) que contenga la instancia.</summary>
      <returns>Representación del bien conocido texto (WKT) del Consorcio Geoespacial Abierto (OGC) de una instancia de geometría.</returns>
      <param name="geometryValue">Valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.BufferWithTolerance(System.Data.Entity.Spatial.DbGeography,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})">
      <summary>Devuelve un objeto geométrico que representa la unión de todos los valores de puntos cuya distancia respecto a una instancia de geografía es menor o igual a un valor especificado, permitiendo una tolerancia especificada.</summary>
      <returns>Unión de todos los valores de puntos cuya distancia respecto a una instancia de geografía es menor o igual a un valor especificado</returns>
      <param name="geographyValue">Valor de geografía.</param>
      <param name="distance">Distancia.</param>
      <param name="tolerance">Tolerancia especificada.</param>
      <param name="relative">Especificando si el valor de tolerancia es relativo o absoluto.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.BufferWithTolerance(System.Data.Entity.Spatial.DbGeometry,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})">
      <summary>Devuelve un objeto geométrico que representa la unión de todos los valores de puntos cuya distancia de geometría respecto a una instancia de geografía es inferior o igual a un valor especificado, permitiendo una tolerancia especificada.</summary>
      <returns>Unión de todos los valores de puntos cuya distancia respecto a una instancia de geometría es menor o igual a un valor especificado</returns>
      <param name="geometryValue">Valor de geometría.</param>
      <param name="distance">Distancia.</param>
      <param name="tolerance">Tolerancia especificada.</param>
      <param name="relative">Especificando si el valor de tolerancia es relativo o absoluto.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.EnvelopeAngle(System.Data.Entity.Spatial.DbGeography)">
      <summary>Devuelve el ángulo máximo entre el punto devuelto por el EnvelopeCenter() y un punto en la instancia de geografía en grados.</summary>
      <returns>Ángulo máximo entre el punto devuelto por EnvelopeCenter().</returns>
      <param name="geographyValue">Valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.EnvelopeCenter(System.Data.Entity.Spatial.DbGeography)">
      <summary>Devuelve un punto que puede utilizarse como el centro de un círculo delimitador para la instancia de geografía.</summary>
      <returns>Un valor SqlGeography que especifica la ubicación del centro de un círculo delimitador.</returns>
      <param name="geographyValue">Valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Filter(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>Ofrece un método rápido de intersección por índice únicamente para determinar si una instancia de geografía se cruza con otra instancia SqlGeography, asumiendo que hay un índice disponible.</summary>
      <returns>True si una instancia de geografía se cruza potencialmente con otra instancia SqlGeography; de lo contrario, false.</returns>
      <param name="geographyValue">Valor de geografía.</param>
      <param name="geographyOther">Otra instancia de geografía para comparar contra la instancia en la que se invoca un filtro.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Filter(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Ofrece un método rápido de intersección por índice únicamente para determinar si una instancia de geografía se cruza con otra instancia SqlGeometry, asumiendo que hay un índice disponible.</summary>
      <returns>True si una instancia de geografía se cruza potencialmente con otra instancia SqlGeography; de lo contrario, false.</returns>
      <param name="geometryValue">Valor de geometría.</param>
      <param name="geometryOther">Otra instancia de geografía para comparar contra la instancia en la que se invoca un filtro.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.InstanceOf(System.Data.Entity.Spatial.DbGeography,System.String)">
      <summary>Comprueba si la instancia SqlGeography es la misma que la del tipo especificado.</summary>
      <returns>Una cadena que especifica uno de los 12 tipos expuestos en la jerarquía del tipo de geografía.</returns>
      <param name="geographyValue">Valor de geografía.</param>
      <param name="geometryTypeName">Una cadena que especifica uno de los 12 tipos expuestos en la jerarquía del tipo de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.InstanceOf(System.Data.Entity.Spatial.DbGeometry,System.String)">
      <summary>Comprueba si la instancia SqlGeometry es la misma que la del tipo especificado.</summary>
      <returns>Una cadena que especifica uno de los 12 tipos expuestos en la jerarquía del tipo de geografía.</returns>
      <param name="geometryValue">Valor de geometría.</param>
      <param name="geometryTypeName">Una cadena que especifica uno de los 12 tipos expuestos en la jerarquía del tipo de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.MakeValid(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Convierte una instancia de geometría inválida en una instancia de geometría con un tipo de Consorcio Geoespacial Abierto (OGC) válido.</summary>
      <returns>Instancia de geometría convertida.</returns>
      <param name="geometryValue">Valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.NumRings(System.Data.Entity.Spatial.DbGeography)">
      <summary>Devuelve el número total de anillos de una instancia de polígono.</summary>
      <returns>Número total de anillos.</returns>
      <param name="geographyValue">Valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.PointGeography(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>Construye una instancia de geografía que representa una instancia de punto desde sus valores de x e y un identificador de referencia espacial (SRID).</summary>
      <returns>Instancia de geografía construida.</returns>
      <param name="latitude">Coordenada x del punto que se está generando.</param>
      <param name="longitude">Coordenada y del punto que se está generando</param>
      <param name="spatialReferenceId">SRID de la instancia de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.PointGeometry(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>Construye una instancia de geometría que representa una instancia de puntos desde sus valores de x e y un identificador de referencia espacial (SRID).</summary>
      <returns>Instancia de geometría construida.</returns>
      <param name="xCoordinate">Coordenada x del punto que se está generando.</param>
      <param name="yCoordinate">Coordenada y del punto que se está generando</param>
      <param name="spatialReferenceId">SRID de la instancia de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Reduce(System.Data.Entity.Spatial.DbGeography,System.Nullable{System.Double})">
      <summary>Devuelve una aproximación de la instancia de geografía especificada generada al ejecutar el algoritmo de Douglas-Peucker en la instancia con la tolerancia especificada.</summary>
      <returns>Devuelve <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</returns>
      <param name="geographyValue">Valor de geografía.</param>
      <param name="tolerance">Tolerancia a introducir en el algoritmo de Douglas-Peucker.La tolerancia debe ser un número positivo.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Reduce(System.Data.Entity.Spatial.DbGeometry,System.Nullable{System.Double})">
      <summary>Devuelve una aproximación de la instancia de geografía especificada generada al ejecutar el algoritmo de Douglas-Peucker en la instancia con la tolerancia especificada.</summary>
      <returns>Devuelve <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</returns>
      <param name="geometryValue">Valor de geometría.</param>
      <param name="tolerance">Tolerancia a introducir en el algoritmo de Douglas-Peucker.La tolerancia debe ser un número positivo.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.RingN(System.Data.Entity.Spatial.DbGeography,System.Nullable{System.Int32})">
      <summary>Devuelve el anillo especificado de la instancia SqlGeography: 1 ≤ n ≤ NumRings().</summary>
      <returns>Un objeto SqlGeography que representa el anillo especificado por n.</returns>
      <param name="geographyValue">Valor de geografía.</param>
      <param name="index">Una expresión de instancia entre 1 y el número de anillos de una instancia de polígono.</param>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlSpatialServices">
      <summary>Representa una implementación de <see cref="T:System.Data.Entity.Spatial.DbSpatialServices" /> para ofrecer compatibilidad con tipos geoespaciales cuando se usa Entity Framework con Microsoft SQL Server.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsBinary(System.Data.Entity.Spatial.DbGeography)">
      <summary>Obtiene la representación binaria conocida del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado.</summary>
      <returns>La representación binaria conocida del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado.</returns>
      <param name="geographyValue">Valor de geografía para el cual debe generarse la representación binaria conocida.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsBinary(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Obtiene la representación binaria conocida del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado.</summary>
      <returns>La representación binaria conocida del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado.</returns>
      <param name="geometryValue">Valor de geometría para el que se debe generar la representación binaria conocida.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsGml(System.Data.Entity.Spatial.DbGeography)">
      <summary>Genera la representación del lenguaje de marcado de geografía (GML) de este valor <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</summary>
      <returns>Cadena que contiene la representación GML de este valor DbGeography.</returns>
      <param name="geographyValue">Valor de geografía para el que se debe generar la representación GML.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsGml(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Genera la representación del lenguaje de marcado de geografía (GML) de este valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</summary>
      <returns>Cadena que contiene la representación GML de este valor DbGeometry.</returns>
      <param name="geometryValue">Valor de geometría para el que se debe generar la representación GML.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsText(System.Data.Entity.Spatial.DbGeography)">
      <summary>Obtiene la representación de texto conocida del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado.Este valor solo debe incluir la longitud y la latitud de los puntos.</summary>
      <returns>Cadena que contiene la bien conocida representación de texto de <paramref name="geographyValue" />.</returns>
      <param name="geographyValue">Valor de geografía para el cual debe generarse la representación de texto conocida.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsText(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Obtiene la representación de texto conocida del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado, incluyendo únicamente las coordenadas X e Y de los puntos.</summary>
      <returns>Cadena que contiene la bien conocida representación de texto de <paramref name="geometryValue" />.</returns>
      <param name="geometryValue">Valor de geometría para el cual debe generarse la representación de texto conocida.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsTextIncludingElevationAndMeasure(System.Data.Entity.Spatial.DbGeography)">
      <summary>Devuelve una representación textual de <see cref="T:System.Data.Entity.SqlServer.SqlSpatialServices" /> con elevación y medidas.</summary>
      <returns>Representación textual de <see cref="T:System.Data.Entity.SqlServer.SqlSpatialServices" />.</returns>
      <param name="geographyValue">Valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsTextIncludingElevationAndMeasure(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve una representación textual de <see cref="T:System.Data.Entity.SqlServer.SqlSpatialServices" /> con elevación y medidas.</summary>
      <returns>Representación textual de <see cref="T:System.Data.Entity.SqlServer.SqlSpatialServices" />.</returns>
      <param name="geometryValue">Valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Buffer(System.Data.Entity.Spatial.DbGeography,System.Double)">
      <summary>Crea un valor de geometría que representa todos los puntos que se encuentran a una distancia igual o menor que el valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado.</summary>
      <returns>Nuevo valor DbGeography que representa todos los puntos que se encuentran a una distancia igual o menor desde <paramref name="geographyValue" />.</returns>
      <param name="geographyValue">Valor de geografía.</param>
      <param name="distance">Valor double que especifica a qué distancia de <paramref name="geographyValue" /> hay que almacenar en búfer.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Buffer(System.Data.Entity.Spatial.DbGeometry,System.Double)">
      <summary>Crea un valor de geometría que representa todos los puntos que se encuentran a una distancia igual o menor que el valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado.</summary>
      <returns>Nuevo valor DbGeometry que representa todos los puntos que se encuentran a una distancia igual o menor desde <paramref name="geometryValue" />.</returns>
      <param name="geometryValue">Valor de geometría.</param>
      <param name="distance">Valor double que especifica a qué distancia de <paramref name="geometryValue" /> hay que almacenar en búfer.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Contains(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina si un valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> contiene espacialmente al otro.</summary>
      <returns>Es true si <paramref name="geometryValue" /> contiene <paramref name="otherGeometry" />; de lo contrario, es false.</returns>
      <param name="geometryValue">Primer valor de geometría.</param>
      <param name="otherGeometry">Segundo valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.CreateProviderValue(System.Data.Entity.Spatial.DbGeographyWellKnownValue)">
      <summary>Crea un valor específico del proveedor compatible con esta implementación de servicios espaciales según la representación <see cref="T:System.Data.Entity.Spatial.DbGeography" /> conocida especificada.</summary>
      <returns>Valor específico del proveedor que codifica la información contenida en <paramref name="wellKnownValue" /> de manera compatible con esta implementación de servicios espaciales.</returns>
      <param name="wellKnownValue">Instancia de <see cref="T:System.Data.Entity.Spatial.DbGeographyWellKnownValue" /> que contiene la representación conocida de un valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.CreateProviderValue(System.Data.Entity.Spatial.DbGeometryWellKnownValue)">
      <summary>Crea un valor específico del proveedor compatible con esta implementación de servicios espaciales según la representación <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> conocida especificada.</summary>
      <returns>Valor específico del proveedor que codifica la información contenida en <paramref name="wellKnownValue" /> de manera compatible con esta implementación de servicios espaciales.</returns>
      <param name="wellKnownValue">Instancia de <see cref="T:System.Data.Entity.Spatial.DbGeometryWellKnownValue" /> que contiene la representación conocida de un valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.CreateWellKnownValue(System.Data.Entity.Spatial.DbGeography)">
      <summary>Crea una instancia de <see cref="T:System.Data.Entity.Spatial.DbGeographyWellKnownValue" /> que representa el valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado usando uno de los formatos espaciales conocidos estándar o ambos.</summary>
      <returns>Representación conocida de <paramref name="geographyValue" />, como un nuevo <see cref="T:System.Data.Entity.Spatial.DbGeographyWellKnownValue" />.</returns>
      <param name="geographyValue">Valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.CreateWellKnownValue(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Crea una instancia de <see cref="T:System.Data.Entity.Spatial.DbGeometryWellKnownValue" /> que representa el valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado usando uno de los formatos espaciales conocidos estándar o ambos.</summary>
      <returns>Representación conocida de <paramref name="geometryValue" />, como un nuevo <see cref="T:System.Data.Entity.Spatial.DbGeometryWellKnownValue" />.</returns>
      <param name="geometryValue">Valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Crosses(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina si los dos valores <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificados se cruzan espacialmente.</summary>
      <returns>Es true si <paramref name="geometryValue" /> se cruza con <paramref name="otherGeometry" />; de lo contrario, es false.</returns>
      <param name="geometryValue">Primer valor de geometría.</param>
      <param name="otherGeometry">Segundo valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Difference(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>Calcula la diferencia de dos valores <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</summary>
      <returns>Nuevo valor DbGeography que representa la diferencia de <paramref name="geographyValue" /> y <paramref name="otherGeography" />.</returns>
      <param name="geographyValue">Primer valor de geografía.</param>
      <param name="otherGeography">Segundo valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Difference(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Calcula la diferencia entre dos valores <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</summary>
      <returns>Nuevo valor DbGeometry que representa la diferencia entre <paramref name="geometryValue" /> y <paramref name="otherGeometry" />.</returns>
      <param name="geometryValue">Primer valor de geometría.</param>
      <param name="otherGeometry">Segundo valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Disjoint(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>Determina si los dos valores <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificados son disjuntos espacialmente.</summary>
      <returns>Es true si <paramref name="geographyValue" /> es disjunto de <paramref name="otherGeography" />; de lo contrario, es false.</returns>
      <param name="geographyValue">Primer valor de geografía cuya disyunción se va a comparar.</param>
      <param name="otherGeography">Segundo valor de geografía cuya disyunción se va a comparar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Disjoint(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina si los dos valores <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificados son disjuntos espacialmente.</summary>
      <returns>Es true si <paramref name="geometryValue" /> es disjunto de <paramref name="otherGeometry" />; de lo contrario, es false.</returns>
      <param name="geometryValue">Primer valor de geometría cuya disyunción se va a comparar.</param>
      <param name="otherGeometry">Segundo valor de geometría cuya disyunción se va a comparar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Distance(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>Calcula la distancia entre los puntos más cercanos de dos valores <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</summary>
      <returns>Valor double que especifica la distancia entre los dos puntos más cercanos de <paramref name="geographyValue" /> y <paramref name="otherGeography" />.</returns>
      <param name="geographyValue">Primer valor de geografía.</param>
      <param name="otherGeography">Segundo valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Distance(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Calcula la distancia entre los puntos más cercanos de dos valores <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</summary>
      <returns>Valor double que especifica la distancia entre los dos puntos más cercanos de <paramref name="geographyValue" /> y <paramref name="otherGeography" />.</returns>
      <param name="geometryValue">Primer valor de geografía.</param>
      <param name="otherGeometry">Segundo valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.ElementAt(System.Data.Entity.Spatial.DbGeography,System.Int32)">
      <summary>Devuelve un elemento del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado si representa una colección geográfica.</summary>
      <returns>Elemento de <paramref name="geographyValue" /> en la posición <paramref name="index" />, si representa una colección de otros valores de geografía; de lo contrario, null.</returns>
      <param name="geographyValue">Valor de geografía, que no necesita representar una colección de geografía.</param>
      <param name="index">Posición dentro del valor de geografía del que se debe tomar el elemento.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.ElementAt(System.Data.Entity.Spatial.DbGeometry,System.Int32)">
      <summary>Devuelve un elemento del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado si representa una colección geométrica.</summary>
      <returns>Elemento de <paramref name="geographyValue" /> en la posición <paramref name="index" />, si representa una colección de otros valores de geografía; de lo contrario, null.</returns>
      <param name="geometryValue">Valor de geometría, que no necesita representar una colección de geometría.</param>
      <param name="index">Posición dentro del valor de geometría del que se debe tomar el elemento.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyCollectionFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuevo valor de colección <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del bien conocido valor binario y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> tal y como lo define el valor binario conocido con el identificador del sistema de coordenadas (SRID) especificado ( <see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" /> ).</returns>
      <param name="geographyCollectionWellKnownBinary">Matriz de bytes que contiene una representación binaria conocida del valor de geografía.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyCollectionFromText(System.String,System.Int32)">
      <summary>Crea un nuevo valor de colección <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del bien conocido valor del texto y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> tal y como lo define el valor de texto conocido con el identificador del sistema de coordenadas (SRID) especificado( <see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" /> ).</returns>
      <param name="geographyCollectionWellKnownText">Cadena que contiene una representación de texto conocida del valor de geografía.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromBinary(System.Byte[])">
      <summary>Crea un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del bien conocido valor binario especificado.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> tal y como lo define el valor binario conocido con el identificador del sistema de coordenadas (SRID) <see cref="T:System.Data.Entity.Spatial.DbGeography" /> predeterminado ( <see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" /> ).</returns>
      <param name="wellKnownBinary">Matriz de bytes que contiene una representación binaria conocida del valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del bien conocido valor binario y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> tal y como lo define el valor binario conocido con el identificador del sistema de coordenadas (SRID) especificado ( <see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" /> ).</returns>
      <param name="wellKnownBinary">Matriz de bytes que contiene una representación binaria conocida del valor de geografía.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromGml(System.String)">
      <summary>Crea un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del valor del lenguaje de marcado de geografía (GML) especificado.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> tal y como lo define el valor GML con el identificador del sistema de coordenadas (SRID) <see cref="T:System.Data.Entity.Spatial.DbGeography" /> predeterminado ( <see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" /> ).</returns>
      <param name="geographyMarkup">Cadena que contiene la representación del lenguaje de marcado de geometría (GML) del valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromGml(System.String,System.Int32)">
      <summary>Crea un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del valor del lenguaje de marcado de geografía (GML) y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> tal y como lo define el valor GML con el identificador del sistema de coordenadas (SRID) especificado.</returns>
      <param name="geographyMarkup">Cadena que contiene la representación del lenguaje de marcado de geometría (GML) del valor de geografía.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromProviderValue(System.Object)">
      <summary>Crea un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función de un valor específico del proveedor que es compatible con esta implementación de servicios espaciales.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> respaldado por esta implementación de servicios espaciales y el valor de proveedor especificado.</returns>
      <param name="providerValue">Valor específico del proveedor que esta implementación de servicios espaciales puede interpretar como un valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromText(System.String)">
      <summary>Crea un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del bien conocido valor del texto especificado.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> tal y como lo define el valor textual conocido con el identificador del sistema de coordenadas (SRID) <see cref="T:System.Data.Entity.Spatial.DbGeography" /> predeterminado ( <see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" /> ).</returns>
      <param name="wellKnownText">Cadena que contiene una representación de texto conocida del valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromText(System.String,System.Int32)">
      <summary>Crea un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del bien conocido valor del texto y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> tal y como lo define el valor de texto conocido con el identificador del sistema de coordenadas (SRID) especificado( <see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" /> ).</returns>
      <param name="wellKnownText">Cadena que contiene una representación de texto conocida del valor de geografía.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyLineFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuevo valor de línea <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del bien conocido valor binario y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> tal y como lo define el valor binario conocido con el identificador del sistema de coordenadas (SRID) especificado ( <see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" /> ).</returns>
      <param name="lineWellKnownBinary">Matriz de bytes que contiene una representación binaria conocida del valor de geografía.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyLineFromText(System.String,System.Int32)">
      <summary>Crea un nuevo valor de línea <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del bien conocido valor de texto y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> tal y como lo define el valor de texto conocido con el identificador del sistema de coordenadas (SRID) especificado( <see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" /> ).</returns>
      <param name="lineWellKnownText">Cadena que contiene una representación de texto conocida del valor de geografía.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyMultiLineFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuevo valor multilínea <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del valor binario conocido y el identificador del sistema de coordenadas especificados.</summary>
      <returns>Nuevo valor multilínea <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</returns>
      <param name="multiLineWellKnownBinary">El valor binario conocido.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyMultiLineFromText(System.String,System.Int32)">
      <summary>Crea un nuevo valor multilínea <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del valor de texto conocido y el identificador del sistema de coordenadas especificados.</summary>
      <returns>Un nuevo valor multilínea <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</returns>
      <param name="multiLineWellKnownText">El valor textual conocido.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyMultiPointFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuevo valor multipunto <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del valor binario conocido y el identificador del sistema de coordenadas especificados.</summary>
      <returns>Un nuevo valor multipunto <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</returns>
      <param name="multiPointWellKnownBinary">El valor binario conocido.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyMultiPointFromText(System.String,System.Int32)">
      <summary>Crea un nuevo valor multipunto <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del valor de texto conocido y el identificador del sistema de coordenadas especificados.</summary>
      <returns>Un nuevo valor multipunto <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</returns>
      <param name="multiPointWellKnownText">El valor textual conocido.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyMultiPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuevo valor multipoligonal <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del valor binario conocido y el identificador del sistema de coordenadas especificados.</summary>
      <returns>Un nuevo valor multipoligonal <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</returns>
      <param name="multiPolygonWellKnownBinary">El valor binario conocido.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyMultiPolygonFromText(System.String,System.Int32)">
      <summary>Crea un nuevo valor multipoligonal <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del valor textual conocido y el identificador del sistema de coordenadas especificados.</summary>
      <returns>Un nuevo valor multipoligonal <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</returns>
      <param name="multiPolygonKnownText">El valor textual conocido.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyPointFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuevo valor de punto <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del bien conocido valor binario y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> tal y como lo define el valor binario conocido con el identificador del sistema de coordenadas (SRID) especificado ( <see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" /> ).</returns>
      <param name="pointWellKnownBinary">Matriz de bytes que contiene una representación binaria conocida del valor de geografía.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyPointFromText(System.String,System.Int32)">
      <summary>Crea un nuevo valor de punto <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del bien conocido valor del texto y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> tal y como lo define el valor de texto conocido con el identificador del sistema de coordenadas (SRID) especificado( <see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" /> ).</returns>
      <param name="pointWellKnownText">Cadena que contiene una representación de texto conocida del valor de geografía.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuevo valor de polígono <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del bien conocido valor binario y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> tal y como lo define el valor binario conocido con el identificador del sistema de coordenadas (SRID) especificado ( <see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" /> ).</returns>
      <param name="polygonWellKnownBinary">Matriz de bytes que contiene una representación binaria conocida del valor de geografía.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyPolygonFromText(System.String,System.Int32)">
      <summary>Crea un nuevo valor de polígono <see cref="T:System.Data.Entity.Spatial.DbGeography" /> en función del bien conocido valor del texto y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> tal y como lo define el valor de texto conocido con el identificador del sistema de coordenadas (SRID) especificado( <see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" /> ).</returns>
      <param name="polygonWellKnownText">Cadena que contiene una representación de texto conocida del valor de geografía.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryCollectionFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuevo valor de colección <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del bien conocido valor binario y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> tal y como lo define el valor binario conocido con el identificador del sistema de coordenadas (SRID) especificado ( <see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" /> ).</returns>
      <param name="geometryCollectionWellKnownBinary">Matriz de bytes que contiene una representación binaria conocida del valor de geometría.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryCollectionFromText(System.String,System.Int32)">
      <summary>Crea un nuevo valor de colección <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del bien conocido valor del texto y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> tal y como lo define el valor de texto conocido con el identificador del sistema de coordenadas (SRID) especificado( <see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" /> ).</returns>
      <param name="geometryCollectionWellKnownText">Cadena que contiene una representación de texto conocida del valor de geometría.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromBinary(System.Byte[])">
      <summary>Crea un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del bien conocido valor binario especificado.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> tal y como lo define el valor binario conocido con el identificador del sistema de coordenadas (SRID) <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> predeterminado ( <see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" /> ).</returns>
      <param name="wellKnownBinary">Matriz de bytes que contiene una representación binaria conocida del valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del bien conocido valor binario y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> tal y como lo define el valor binario conocido con el identificador del sistema de coordenadas (SRID) especificado ( <see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" /> ).</returns>
      <param name="wellKnownBinary">Matriz de bytes que contiene una representación binaria conocida del valor de geometría.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromGml(System.String)">
      <summary>Crea un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del valor del lenguaje de marcado de geografía (GML) especificado.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> tal y como lo define el valor GML con el identificador del sistema de coordenadas (SRID) <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> predeterminado ( <see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" /> ).</returns>
      <param name="geometryMarkup">Cadena que contiene la representación del lenguaje de marcado de geografía (GML) del valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromGml(System.String,System.Int32)">
      <summary>Crea un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del valor del lenguaje de marcado de geografía (GML) y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> tal y como lo define el valor GML con el identificador del sistema de coordenadas (SRID) especificado.</returns>
      <param name="geometryMarkup">Cadena que contiene la representación del lenguaje de marcado de geografía (GML) del valor de geometría.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromProviderValue(System.Object)">
      <summary>Crea un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función de un valor específico del proveedor que es compatible con esta implementación de servicios espaciales.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> respaldado por esta implementación de servicios espaciales y el valor de proveedor especificado.</returns>
      <param name="providerValue">Valor específico del proveedor que esta implementación de servicios espaciales puede interpretar como un valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromText(System.String)">
      <summary>Crea un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del bien conocido valor del texto especificado.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> tal y como lo define el valor textual conocido con el identificador del sistema de coordenadas (SRID) <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> predeterminado ( <see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" /> ).</returns>
      <param name="wellKnownText">Cadena que contiene una representación de texto conocida del valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromText(System.String,System.Int32)">
      <summary>Crea un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del bien conocido valor del texto y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> tal y como lo define el valor de texto conocido con el identificador del sistema de coordenadas (SRID) especificado( <see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" /> ).</returns>
      <param name="wellKnownText">Cadena que contiene una representación de texto conocida del valor de geometría.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryLineFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuevo valor de línea <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del bien conocido valor binario y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> tal y como lo define el valor binario conocido con el identificador del sistema de coordenadas (SRID) especificado ( <see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" /> ).</returns>
      <param name="lineWellKnownBinary">Matriz de bytes que contiene una representación binaria conocida del valor de geometría.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryLineFromText(System.String,System.Int32)">
      <summary>Crea un nuevo valor de línea <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del bien conocido valor de texto y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> tal y como lo define el valor de texto conocido con el identificador del sistema de coordenadas (SRID) especificado( <see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" /> ).</returns>
      <param name="lineWellKnownText">Cadena que contiene una representación de texto conocida del valor de geometría.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryMultiLineFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuevo valor multilínea <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del valor binario conocido y el identificador del sistema de coordenadas especificados.</summary>
      <returns>Nuevo valor multilínea <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</returns>
      <param name="multiLineWellKnownBinary">El valor binario conocido.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryMultiLineFromText(System.String,System.Int32)">
      <summary>Crea un nuevo valor multilínea <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del valor de texto conocido y el identificador del sistema de coordenadas especificados.</summary>
      <returns>Un nuevo valor multilínea <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</returns>
      <param name="multiLineWellKnownText">El valor textual conocido.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryMultiPointFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuevo valor multipunto <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del valor binario conocido y el identificador del sistema de coordenadas especificados.</summary>
      <returns>Un nuevo valor multipunto <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</returns>
      <param name="multiPointWellKnownBinary">El valor binario conocido.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryMultiPointFromText(System.String,System.Int32)">
      <summary>Crea un nuevo valor multipunto <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del valor de texto conocido y el identificador del sistema de coordenadas especificados.</summary>
      <returns>Un nuevo valor multipunto <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</returns>
      <param name="multiPointWellKnownText">El valor textual conocido.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryMultiPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuevo valor multipoligonal <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del valor binario conocido y el identificador del sistema de coordenadas especificados.</summary>
      <returns>Un nuevo valor multipoligonal <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</returns>
      <param name="multiPolygonWellKnownBinary">El valor binario conocido.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryMultiPolygonFromText(System.String,System.Int32)">
      <summary>Crea un nuevo valor multipoligonal <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del valor textual conocido y el identificador del sistema de coordenadas especificados.</summary>
      <returns>Un nuevo valor multipoligonal <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</returns>
      <param name="multiPolygonKnownText">El valor textual conocido.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryPointFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuevo valor de punto <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del bien conocido valor binario y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> tal y como lo define el valor binario conocido con el identificador del sistema de coordenadas (SRID) especificado ( <see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" /> ).</returns>
      <param name="pointWellKnownBinary">Matriz de bytes que contiene una representación binaria conocida del valor de geometría.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryPointFromText(System.String,System.Int32)">
      <summary>Crea un nuevo valor de punto <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del bien conocido valor del texto y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> tal y como lo define el valor de texto conocido con el identificador del sistema de coordenadas (SRID) especificado( <see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" /> ).</returns>
      <param name="pointWellKnownText">Cadena que contiene una representación de texto conocida del valor de geometría.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuevo valor de polígono <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del bien conocido valor binario y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> tal y como lo define el valor binario conocido con el identificador del sistema de coordenadas (SRID) especificado ( <see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" /> ).</returns>
      <param name="polygonWellKnownBinary">Matriz de bytes que contiene una representación binaria conocida del valor de geometría.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryPolygonFromText(System.String,System.Int32)">
      <summary>Crea un nuevo valor de polígono <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> en función del bien conocido valor del texto y el identificador del sistema de coordenadas (SRID) especificados.</summary>
      <returns>Un nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> tal y como lo define el valor de texto conocido con el identificador del sistema de coordenadas (SRID) especificado( <see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" /> ).</returns>
      <param name="polygonWellKnownText">Cadena que contiene una representación de texto conocida del valor de geometría.</param>
      <param name="coordinateSystemId">Identificador del sistema de coordenadas que el nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> debe usar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetArea(System.Data.Entity.Spatial.DbGeography)">
      <summary>Devuelve un valor doble que acepta valores NULL que indica la superficie del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado, que puede ser NULL si este valor no representa una superficie.</summary>
      <returns>Un valor doble que acepta valores NULL doble que indica la superficie del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado.</returns>
      <param name="geographyValue">Valor de geografía, que no necesita representar una superficie.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetArea(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve un valor doble que acepta valores NULL que indica la superficie del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado, que puede ser NULL si este valor no representa una superficie.</summary>
      <returns>Un valor doble que acepta valores NULL doble que indica la superficie del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado.</returns>
      <param name="geometryValue">Valor de geometría, que no necesita representar una superficie.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetBoundary(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve un valor doble que acepta valores NULL que indica el límite del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado.</summary>
      <returns>El límite del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado.</returns>
      <param name="geometryValue">Valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetCentroid(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve un valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> que representa el centroide del valor DbGeometry especificado, que puede ser NULL si el valor no representa una superficie.</summary>
      <returns>Centroide de <paramref name="geometryValue" /> si representa una superficie; de lo contrario, null.</returns>
      <param name="geometryValue">Valor de geometría, que no necesita representar una superficie.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetConvexHull(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve un valor doble que acepta valores NULL que indica la forma convexa del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado.</summary>
      <returns>La forma convexa del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado.</returns>
      <param name="geometryValue">Valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetCoordinateSystemId(System.Data.Entity.Spatial.DbGeography)">
      <summary>Devuelve el identificador del sistema de coordenadas del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado.</summary>
      <returns>El identificador del sistema de coordenadas del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado.</returns>
      <param name="geographyValue">Valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetCoordinateSystemId(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve el identificador del sistema de coordenadas del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado.</summary>
      <returns>El identificador del sistema de coordenadas del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado.</returns>
      <param name="geometryValue">Valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetDimension(System.Data.Entity.Spatial.DbGeography)">
      <summary>Obtiene la dimensión del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado o bien, si el valor es una colección, la dimensión del elemento más grande.</summary>
      <returns>Dimensión de <paramref name="geographyValue" /> o dimensión del elemento más grande si <see cref="T:System.Data.Entity.Spatial.DbGeography" /> es una colección.</returns>
      <param name="geographyValue">Valor de geografía para el que se debe recuperar el valor de dimensión.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetDimension(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Obtiene la dimensión del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado o bien, si el valor es una colección, la dimensión del elemento más grande.</summary>
      <returns>Dimensión de <paramref name="geometryValue" /> o dimensión del elemento más grande si <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> es una colección.</returns>
      <param name="geometryValue">Valor de geometría para el que se debe recuperar el valor de dimensión.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetElementCount(System.Data.Entity.Spatial.DbGeography)">
      <summary>Devuelve el número de elementos del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado si representa una colección geográfica.</summary>
      <returns>Número de elementos de <paramref name="geographyValue" /> si representa una colección de otros valores de geografía; de lo contrario, null.</returns>
      <param name="geographyValue">Valor de geografía, que no necesita representar una colección de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetElementCount(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve el número de elementos del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado si representa una colección geométrica.</summary>
      <returns>Número de elementos de <paramref name="geometryValue" /> si representa una colección de otros valores de geometría; de lo contrario, null.</returns>
      <param name="geometryValue">Valor de geometría, que no necesita representar una colección de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetElevation(System.Data.Entity.Spatial.DbGeography)">
      <summary>Devuelve la elevación (coordenada Z) del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado si representa un punto.</summary>
      <returns>Elevación (coordenada Z) de <paramref name="geographyValue" /> si representa un punto; de lo contrario, null.</returns>
      <param name="geographyValue">Valor de geografía, que no necesita representar un punto.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetElevation(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve la elevación (coordenada Z) del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado si representa un punto.</summary>
      <returns>Elevación (Z) de <paramref name="geometryValue" /> si representa un punto; de lo contrario, null.</returns>
      <param name="geometryValue">Valor de geometría, que no necesita representar un punto.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetEndPoint(System.Data.Entity.Spatial.DbGeography)">
      <summary>Devuelve un valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> que representa el extremo del valor DbGeography especificado, que puede ser NULL si el valor no representa una curva.</summary>
      <returns>Punto final de <paramref name="geographyValue" /> si representa una curva; de lo contrario, null.</returns>
      <param name="geographyValue">Valor de geografía, que no necesita representar una curva.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetEndPoint(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve un valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> que representa el extremo del valor DbGeometry especificado, que puede ser NULL si el valor no representa una curva.</summary>
      <returns>Punto final de <paramref name="geometryValue" /> si representa una curva; de lo contrario, null.</returns>
      <param name="geometryValue">Valor de geometría, que no necesita representar una curva.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetEnvelope(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Obtiene la envolvente (cuadro de límite mínimo) del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado, como un valor de geometría.</summary>
      <returns>Envolvente de <paramref name="geometryValue" />, como un valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</returns>
      <param name="geometryValue">Valor de geometría para el que se debe recuperar el valor de envolvente.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetExteriorRing(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve un valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> que representa el anillo exterior del valor DbGeometry especificado, que puede ser NULL si el valor no representa un polígono.</summary>
      <returns>Valor DbGeometry que representa el anillo exterior de <paramref name="geometryValue" /> si representa un polígono; de lo contrario, null.</returns>
      <param name="geometryValue">Valor de geometría, que no necesita representar un polígono.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetInteriorRingCount(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve el número de anillos interiores del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado si representa un polígono.</summary>
      <returns>Número de elementos de <paramref name="geometryValue" /> si representa un polígono; de lo contrario, null.</returns>
      <param name="geometryValue">Valor de geometría, que no necesita representar un polígono.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsClosed(System.Data.Entity.Spatial.DbGeography)">
      <summary>Devuelve un valor booleano que acepta valores NULL que indica si el valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> está o no cerrado, que puede ser NULL si este valor no representa una curva.</summary>
      <returns>Es true si el valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado está cerrado; de lo contrario, es false.</returns>
      <param name="geographyValue">Valor de geografía, que no necesita representar una curva.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsClosed(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve un valor booleano que acepta valores NULL que indica si el valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> está o no cerrado, que puede ser NULL si este valor no representa una curva.</summary>
      <returns>Es true si el valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado está cerrado; de lo contrario, es false.</returns>
      <param name="geometryValue">Valor de geometría, que no necesita representar una curva.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsEmpty(System.Data.Entity.Spatial.DbGeography)">
      <summary>Devuelve un valor booleano que acepta valores NULL si el valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado está o no vacío.</summary>
      <returns>Es true si el valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado está vacío; de lo contrario, es false.</returns>
      <param name="geographyValue">Valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsEmpty(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve un valor booleano que acepta valores NULL si el valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado está o no vacío.</summary>
      <returns>Es true si el valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado está vacío; de lo contrario, es false.</returns>
      <param name="geometryValue">Valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsRing(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve un valor booleano que acepta valores NULL que indica si el valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> es o no un anillo, que puede ser NULL si este valor no representa una curva.</summary>
      <returns>Es true si el valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado es un anillo; de lo contrario, es false.</returns>
      <param name="geometryValue">Valor de geometría, que no necesita representar una curva.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsSimple(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve un valor booleano que acepta valores NULL si el valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado es o no simple.</summary>
      <returns>Es true si el valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado es simple; de lo contrario, es false.</returns>
      <param name="geometryValue">Valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsValid(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve un valor booleano que acepta valores NULL si el valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado es válido.</summary>
      <returns>Es true si el valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado es válido; de lo contrario, es false.</returns>
      <param name="geometryValue">Valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetLatitude(System.Data.Entity.Spatial.DbGeography)">
      <summary>Devuelve la coordenada de latitud del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado si representa un punto.</summary>
      <returns>La coordenada de latitud del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado.</returns>
      <param name="geographyValue">Valor de geografía, que no necesita representar un punto.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetLength(System.Data.Entity.Spatial.DbGeography)">
      <summary>Devuelve un valor doble que acepta valores NULL que indica la longitud del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado, que puede ser NULL si este valor no representa una curva.</summary>
      <returns>La longitud del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado.</returns>
      <param name="geographyValue">Valor de geografía, que no necesita representar una curva.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetLength(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve un valor doble que acepta valores NULL que indica la longitud del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado, que puede ser NULL si este valor no representa una curva.</summary>
      <returns>La longitud del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado.</returns>
      <param name="geometryValue">Valor de geometría, que no necesita representar una curva.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetLongitude(System.Data.Entity.Spatial.DbGeography)">
      <summary>Devuelve la coordenada de longitud del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado si representa un punto.</summary>
      <returns>La coordenada de longitud del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado.</returns>
      <param name="geographyValue">Valor de geografía, que no necesita representar un punto.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetMeasure(System.Data.Entity.Spatial.DbGeography)">
      <summary>Devuelve la coordenada M (Medida) del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado si representa un punto.</summary>
      <returns>La coordenada M (Medida) del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado.</returns>
      <param name="geographyValue">Valor de geografía, que no necesita representar un punto.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetMeasure(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve la coordenada M (Medida) del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado si representa un punto.</summary>
      <returns>La coordenada M (Medida) del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado.</returns>
      <param name="geometryValue">Valor de geometría, que no necesita representar un punto.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetPointCount(System.Data.Entity.Spatial.DbGeography)">
      <summary>Devuelve el número de puntos del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado, si representa una cadena lineal o un anillo lineal.</summary>
      <returns>El número de puntos del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado.</returns>
      <param name="geographyValue">Valor de geografía, que no necesita representar un anillo linestring o lineal.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetPointCount(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve el número de puntos del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado, si representa una cadena lineal o un anillo lineal.</summary>
      <returns>El número de puntos del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado.</returns>
      <param name="geometryValue">Valor de geometría, que no necesita representar un anillo linestring o lineal.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetPointOnSurface(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve un valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> que representa un punto sobre la superficie del valor DbGeometry especificado, que puede ser NULL si el valor no representa una superficie.</summary>
      <returns>Valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> que representa un punto en la superficie del valor <paramref name="geometryValue" /> especificado.</returns>
      <param name="geometryValue">Valor de geometría, que no necesita representar una superficie.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetSpatialTypeName(System.Data.Entity.Spatial.DbGeography)">
      <summary>Devuelve un valor que indica el nombre del tipo espacial del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado.</summary>
      <returns>El nombre del tipo espacial del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado.</returns>
      <param name="geographyValue">Valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetSpatialTypeName(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve un valor que indica el nombre del tipo espacial del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado.</summary>
      <returns>El nombre del tipo espacial del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado.</returns>
      <param name="geometryValue">Valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetStartPoint(System.Data.Entity.Spatial.DbGeography)">
      <summary>Devuelve un valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> que representa el punto de inicio del valor DbGeometry especificado, que puede ser NULL si el valor no representa una curva.</summary>
      <returns>El punto de inicio del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado.</returns>
      <param name="geographyValue">Valor de geografía, que no necesita representar una curva.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetStartPoint(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve un valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" />, que representa el punto de inicio del valor DbGeometry especificado, que puede ser NULL si el valor no representa una curva.</summary>
      <returns>El punto de inicio del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado.</returns>
      <param name="geometryValue">Valor de geometría, que no necesita representar una curva.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetXCoordinate(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve la coordenada X del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado si representa un punto.</summary>
      <returns>La coordenada X del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado.</returns>
      <param name="geometryValue">Valor de geometría, que no necesita representar un punto.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetYCoordinate(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Devuelve la coordenada Y del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado si representa un punto.</summary>
      <returns>La coordenada Y del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado.</returns>
      <param name="geometryValue">Valor de geometría, que no necesita representar un punto.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.InteriorRingAt(System.Data.Entity.Spatial.DbGeometry,System.Int32)">
      <summary>Devuelve un anillo interior a partir del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado si representa un polígono.</summary>
      <returns>Anillo interior de <paramref name="geometryValue" /> en la posición <paramref name="index" /> si representa un polígono; de lo contrario, null.</returns>
      <param name="geometryValue">Valor de geometría, que no necesita representar un polígono.</param>
      <param name="index">Posición dentro del valor de geometría del que se debe tomar el elemento.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Intersection(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>Calcula la intersección de dos valores <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</summary>
      <returns>Nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> que representa la intersección de <paramref name="geographyValue" /> y <paramref name="otherGeography" />.</returns>
      <param name="geographyValue">Primer valor de geografía.</param>
      <param name="otherGeography">Segundo valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Intersection(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Calcula la intersección de dos valores <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</summary>
      <returns>Nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> que representa la intersección de <paramref name="geographyValue" /> y <paramref name="otherGeography" />.</returns>
      <param name="geometryValue">Primer valor de geometría.</param>
      <param name="otherGeometry">Segundo valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Intersects(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>Determina si los dos valores <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificados forman una intersección espacialmente.</summary>
      <returns>Es true si <paramref name="geographyValue" /> forma una intersección con <paramref name="otherGeography" />; de lo contrario, es false.</returns>
      <param name="geographyValue">Primer valor de geografía cuya intersección se va a comparar.</param>
      <param name="otherGeography">Segundo valor de geografía cuya intersección se va a comparar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Intersects(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina si los dos valores <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificados forman una intersección espacialmente.</summary>
      <returns>Es true si <paramref name="geometryValue" /> forma una intersección con <paramref name="otherGeometry" />; de lo contrario, es false.</returns>
      <param name="geometryValue">Primer valor de geometría cuya intersección se va a comparar.</param>
      <param name="otherGeometry">Segundo valor de geometría cuya intersección se va a comparar.</param>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlSpatialServices.NativeTypesAvailable">
      <summary>Obtiene un valor que indica si EF continuará dando por supuesto que el proveedor tiene los tipos y los recursos necesarios en lugar de producir un error con rapidez.El valor predeterminado es true.</summary>
      <returns>Es true si EF continuará dando por supuesto que el proveedor tiene los tipos y los recursos necesarios en lugar de producir un error con rapidez; de lo contrario, es false.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Overlaps(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina si los dos valores <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificados se superponen espacialmente.</summary>
      <returns>Es true si <paramref name="geometryValue" /> se superpone a <paramref name="otherGeometry" />; de lo contrario, es false.</returns>
      <param name="geometryValue">Primer valor de geometría.</param>
      <param name="otherGeometry">Segundo valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.PointAt(System.Data.Entity.Spatial.DbGeography,System.Int32)">
      <summary>Devuelve un elemento de punto del valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificado, si representa una cadena lineal o un anillo lineal.</summary>
      <returns>Punto de <paramref name="geographyValue" /> en la posición <paramref name="index" /> si representa un anillo linestring o lineal; de lo contrario, null.</returns>
      <param name="geographyValue">Valor de geografía, que no necesita representar un anillo linestring o lineal.</param>
      <param name="index">Posición dentro del valor de geografía del que se debe tomar el elemento.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.PointAt(System.Data.Entity.Spatial.DbGeometry,System.Int32)">
      <summary>Devuelve un elemento de punto del valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificado, si representa una cadena lineal o un anillo lineal.</summary>
      <returns>Punto de <paramref name="geometryValue" /> en la posición <paramref name="index" /> si representa un anillo linestring o lineal; de lo contrario, null.</returns>
      <param name="geometryValue">Valor de geometría, que no necesita representar un anillo linestring o lineal.</param>
      <param name="index">Posición dentro del valor de geometría del que se debe tomar el elemento.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Relate(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry,System.String)">
      <summary>Determina si los dos valores <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificados están relacionados espacialmente según el modelo de intersección Dimensionally Extended Nine-Intersection Model (DE-9IM) especificado.</summary>
      <returns>Es true si este valor <paramref name="geometryValue" /> se relaciona con <paramref name="otherGeometry" /> según la <paramref name="matrix" /> del modelo de intersección especificado; de lo contrario, es false.</returns>
      <param name="geometryValue">Primer valor de geometría.</param>
      <param name="otherGeometry">Valor de geometría cuya relación con el primer valor de geometría se debe comparar.</param>
      <param name="matrix">Cadena que contiene la representación de texto del modelo de intersección DE-9IM que define la relación.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.SpatialEquals(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>Determina si los dos valores <see cref="T:System.Data.Entity.Spatial.DbGeography" /> especificados son iguales espacialmente.</summary>
      <returns>Es true si <paramref name="geographyValue" /> es igual espacialmente que <paramref name="otherGeography" />; de lo contrario, es false.</returns>
      <param name="geographyValue">Primer valor de geografía cuya igualdad se va a comparar.</param>
      <param name="otherGeography">Segundo valor de geografía cuya igualdad se va a comparar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.SpatialEquals(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina si los dos valores <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificados son iguales espacialmente.</summary>
      <returns>Es true si <paramref name="geometryValue" /> es igual espacialmente que <paramref name="otherGeometry" />; de lo contrario, es false.</returns>
      <param name="geometryValue">Primer valor de geometría cuya igualdad se va a comparar.</param>
      <param name="otherGeometry">Segundo valor de geometría cuya igualdad se va a comparar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.SymmetricDifference(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>Calcula la diferencia simétrica de dos valores <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</summary>
      <returns>Nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> que representa la diferencia simétrica de <paramref name="geographyValue" /> y <paramref name="otherGeography" />.</returns>
      <param name="geographyValue">Primer valor de geografía.</param>
      <param name="otherGeography">Segundo valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.SymmetricDifference(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Calcula la diferencia simétrica entre dos valores <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</summary>
      <returns>Nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> que representa la diferencia simétrica entre <paramref name="geometryValue" /> y <paramref name="otherGeometry" />.</returns>
      <param name="geometryValue">Primer valor de geometría.</param>
      <param name="otherGeometry">Segundo valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Touches(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina si los dos valores <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> especificados se tocan espacialmente.</summary>
      <returns>Es true si <paramref name="geometryValue" /> se toca con <paramref name="otherGeometry" />; de lo contrario, es false.</returns>
      <param name="geometryValue">Primer valor de geometría.</param>
      <param name="otherGeometry">Segundo valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Union(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>Calcula la unión de dos valores <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</summary>
      <returns>Nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeography" /> que representa la unión de <paramref name="geographyValue" /> y <paramref name="otherGeography" />.</returns>
      <param name="geographyValue">Primer valor de geografía.</param>
      <param name="otherGeography">Segundo valor de geografía.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Union(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Calcula la unión de dos valores <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</summary>
      <returns>Nuevo valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> que representa la unión de <paramref name="geometryValue" /> y <paramref name="otherGeometry" />.</returns>
      <param name="geometryValue">Primer valor de geometría.</param>
      <param name="otherGeometry">Segundo valor de geometría.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Within(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina si un valor <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> está espacialmente dentro del otro.</summary>
      <returns>Es true si geometryValue está dentro de otherGeometry; de lo contrario, false.</returns>
      <param name="geometryValue">Primer valor de geometría.</param>
      <param name="otherGeometry">Segundo valor de geometría.</param>
    </member>
    <member name="T:System.Data.Entity.SqlServer.Utilities.TaskExtensions">
      <summary>Contiene métodos de extensión para la clase <see cref="T:System.Threading.Tasks.Task" />.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.WithCurrentCulture(System.Threading.Tasks.Task)">
      <summary>Configura un awaiter que se usa para esperar por esta <see cref="T:System.Threading.Tasks.Task" /> con el fin de evitar calcular las referencias de la continuación de vuelta en el contexto original, pero preservando la referencia cultural actual y la referencia cultural de la interfaz de usuario.</summary>
      <returns>Objeto usado para esperar por esta tarea.</returns>
      <param name="task">Tarea por la que se va a esperar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.WithCurrentCulture``1(System.Threading.Tasks.Task{``0})">
      <summary>Configura un awaiter que se usa para esperar por esta <see cref="T:System.Threading.Tasks.Task`1" /> con el fin de evitar calcular las referencias de la continuación de vuelta en el contexto original, pero preservando la referencia cultural actual y la referencia cultural de la interfaz de usuario.</summary>
      <returns>Objeto usado para esperar por esta tarea.</returns>
      <param name="task">Tarea por la que se va a esperar.</param>
      <typeparam name="T">Tipo del resultado producido por la <see cref="T:System.Threading.Tasks.Task`1" /> asociada.</typeparam>
    </member>
    <member name="T:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter">
      <summary>Proporciona un objeto que admite await y que permite las esperas por la <see cref="T:System.Threading.Tasks.Task" /> que conservan la referencia cultural.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter.#ctor(System.Threading.Tasks.Task)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter" />.</summary>
      <param name="task">Tarea por la que se va a esperar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter.GetAwaiter">
      <summary>Obtiene un awaiter que se usa para esperar por esta <see cref="T:System.Threading.Tasks.Task" />.</summary>
      <returns>Instancia de awaiter.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter.GetResult">
      <summary>Finaliza la espera por la <see cref="T:System.Threading.Tasks.Task" /> completada.</summary>
      <exception cref="T:System.NullReferenceException">El awaiter no se inicializó correctamente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">La tarea se canceló.</exception>
      <exception cref="T:System.Exception">La tarea se completó en un estado con error.</exception>
    </member>
    <member name="P:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter.IsCompleted">
      <summary>Obtiene si esta <see cref="T:System.Threading.Tasks.Task" /> se completó.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter.OnCompleted(System.Action)">
      <summary>Este método no se implementa y no debe llamarse.</summary>
      <param name="continuation">Acción que se invoca cuando se completa la operación de espera.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter.UnsafeOnCompleted(System.Action)">
      <summary>Programa la continuación a la <see cref="T:System.Threading.Tasks.Task" /> asociada a este <see cref="T:System.Runtime.CompilerServices.TaskAwaiter" />.</summary>
      <param name="continuation">Acción que se invoca cuando se completa la operación de espera.</param>
      <exception cref="T:System.ArgumentNullException">El argumento <paramref name="continuation" /> es NULL (Nothing en Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">El awaiter no se inicializó correctamente.</exception>
    </member>
    <member name="T:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1">
      <summary>Proporciona un objeto que admite await y que permite las esperas por la <see cref="T:System.Threading.Tasks.Task`1" /> que conservan la referencia cultural.</summary>
      <typeparam name="T">Tipo del resultado producido por la <see cref="T:System.Threading.Tasks.Task`1" /> asociada.</typeparam>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1.#ctor(System.Threading.Tasks.Task{`0})">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1" />.</summary>
      <param name="task">Tarea por la que se va a esperar.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1.GetAwaiter">
      <summary>Obtiene un awaiter que se usa para esperar por esta <see cref="T:System.Threading.Tasks.Task`1" />.</summary>
      <returns>Instancia de awaiter.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1.GetResult">
      <summary>Finaliza la espera por la <see cref="T:System.Threading.Tasks.Task`1" /> completada.</summary>
      <returns>Resultado de la <see cref="T:System.Threading.Tasks.Task`1" /> completada.</returns>
      <exception cref="T:System.NullReferenceException">El awaiter no se inicializó correctamente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">La tarea se canceló.</exception>
      <exception cref="T:System.Exception">La tarea se completó en un estado con error.</exception>
    </member>
    <member name="P:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1.IsCompleted">
      <summary>Obtiene si esta <see cref="T:System.Threading.Tasks.Task" /> se completó.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1.OnCompleted(System.Action)">
      <summary>Este método no se implementa y no debe llamarse.</summary>
      <param name="continuation">Acción que se invoca cuando se completa la operación de espera.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1.UnsafeOnCompleted(System.Action)">
      <summary>Programa la continuación a la <see cref="T:System.Threading.Tasks.Task`1" /> asociada a este <see cref="T:System.Runtime.CompilerServices.TaskAwaiter`1" />.</summary>
      <param name="continuation">Acción que se invoca cuando se completa la operación de espera.</param>
      <exception cref="T:System.ArgumentNullException">El argumento <paramref name="continuation" /> es NULL (Nothing en Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">El awaiter no se inicializó correctamente.</exception>
    </member>
  </members>
</doc>